/*
  Omega Horizon: http://www.neoretro.games#gamebuino_meta_omega_horizon
  Gamebuino Meta version 1.0
  Copyright (C) Neo Retro Games - All Rights Reserved
  Unauthorized copying of this file, via any medium is strictly prohibited
  Proprietary and confidential
  2017/2018 - SHDWWZRD & KURONOWACHAN
*/

#include <Gamebuino-Meta.h>

#define VERSION "V1.0"


//define menu states (on main menu)
#define STATE_MENU_INTRO         0 //show group logo
#define STATE_TITLE_SCREEN       1 //play, sound on/off, music on/off SHDWWZRD in the corner
#define STATE_STORY_SCREEN       2
#define STATE_MISSION_SCREEN     3
#define STATE_PLANET_SCREEN      4
#define STATE_GAME_PLAYING       5 //main game playing screen
#define STATE_ROOM_TRANSITION    6 
#define STATE_GAME_OVER          7 //game over text on screen, show score and level reached returns to title screen after a button clicked
#define STATE_MISSION_COMPLETE   8





unsigned long milli;



/////////////////////////////////////////////////////////////////////////////////
//IMAGES
/////////////////////////////////////////////////////////////////////////////////

const uint16_t PROGMEM  neo_retro_logo2_64x64x1Data[] = {64,64,1, 0, 0, 0, 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0xffff,0xffff,0xffff,0x0,0xffff,0xffff,0xffff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0};
Image neo_retro_logo = Image(neo_retro_logo2_64x64x1Data);
const uint16_t PROGMEM  blast_8x8x2Data[] = {8,8,1, 0, 0xF81F, 0, 0xF81F,0xc382,0xdd84,0xdd84,0xdd84,0xdd84,0xc382,0xF81F,0xc382,0xdd84,0xe24a,0xc94c,0xc94c,0xe24a,0xdd84,0xc382,0xdd84,0xe24a,0xc94c,0xe24a,0xe24a,0xc94c,0xe24a,0xdd84,0xdd84,0xc94c,0xe24a,0xe24a,0xe24a,0xe24a,0xc94c,0xdd84,0xdd84,0xc94c,0xe24a,0xe24a,0xe24a,0xe24a,0xc94c,0xdd84,0xdd84,0xe24a,0xc94c,0xe24a,0xe24a,0xc94c,0xe24a,0xdd84,0xc382,0xdd84,0xe24a,0xc94c,0xc94c,0xe24a,0xdd84,0xc382,0xF81F,0xc382,0xdd84,0xdd84,0xdd84,0xdd84,0xc382,0xF81F};
Image blast_plus_mask = Image(blast_8x8x2Data);
const uint16_t PROGMEM  bullets_8x8x1Data[] = {8,8,3, 0, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xc382,0xc382,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xc382,0xdd84,0xdd84,0xc382,0xF81F,0xF81F,0xF81F,0xF81F,0xc382,0xdd84,0xf4e7,0xc382,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xc382,0xc382,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xc382,0xc382,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xc382,0xdd84,0xdd84,0xc382,0xF81F,0xF81F,0xF81F,0xc382,0xdd84,0xf4e7,0xf4e7,0xf4e7,0xc382,0xF81F,0xF81F,0xc382,0xdd84,0xf4e7,0xf4e7,0xf4e7,0xc382,0xF81F,0xF81F,0xF81F,0xc382,0xf4e7,0xf4e7,0xc382,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xc382,0xc382,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xc382,0xc382,0xc382,0xc382,0xc382,0xc382,0xF81F,0xc382,0xdd84,0xdd84,0xdd84,0xdd84,0xdd84,0xdd84,0xc382,0xc382,0xdd84,0xf4e7,0xf4e7,0xf4e7,0xf4e7,0xf4e7,0xc382,0xF81F,0xc382,0xc382,0xc382,0xc382,0xc382,0xc382,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F};
Image bullets_plus_mask = Image(bullets_8x8x1Data);
const uint16_t PROGMEM  death_8x8x1Data[] = {8,8,2, 0, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x7806,0xF81F,0xF81F,0x7806,0xF81F,0xF81F,0xF81F,0x7806,0xd800,0x7806,0x7806,0xd800,0x7806,0xF81F,0xF81F,0xF81F,0x7806,0xd800,0xd800,0x7806,0xF81F,0xF81F,0xF81F,0xF81F,0x7806,0xd800,0xd800,0x7806,0xF81F,0xF81F,0xF81F,0x7806,0xd800,0x7806,0x7806,0xd800,0x7806,0xF81F,0xF81F,0xF81F,0x7806,0xF81F,0xF81F,0x7806,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x7806,0xF81F,0xF81F,0xF81F,0xF81F,0x7806,0xF81F,0x7806,0xd800,0x7806,0xF81F,0x7806,0x7806,0xd800,0x7806,0xF81F,0x7806,0x7806,0x7806,0xd800,0x7806,0x7806,0xF81F,0xF81F,0x7806,0xd800,0x7806,0x7806,0x7806,0xF81F,0xF81F,0xF81F,0xF81F,0x7806,0x7806,0x7806,0xd800,0x7806,0xF81F,0xF81F,0x7806,0x7806,0xd800,0x7806,0x7806,0x7806,0xF81F,0x7806,0xd800,0x7806,0x7806,0xF81F,0x7806,0xd800,0x7806,0xF81F,0x7806,0xF81F,0xF81F,0xF81F,0xF81F,0x7806,0xF81F};
Image death_plus_mask = Image(death_8x8x1Data);
const uint16_t PROGMEM  doors_plus_maskData[] = {8,8,4, 0, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0x6920,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0x6920,0xdd84,0xdd84,0x6920,0x6920,0xF81F,0x6920,0xdd84,0xdd84,0xf4e7,0xf4e7,0xf4e7,0xf4e7,0x6920,0xdd84,0xf4e7,0xf4e7,0xf4e7,0xf4e7,0xf4e7,0xf4e7,0xf4e7,0x6920,0x6920,0x6920,0x6920,0x6920,0x6920,0x6920,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xdd84,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xf4e7,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xf4e7,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0x6920,0x6920,0x6920,0x6920,0x6920,0x6920,0x6920,0xdd84,0xdd84,0xdd84,0xdd84,0xdd84,0xdd84,0xdd84,0xdd84,0x6920,0xdd84,0xf4e7,0xf4e7,0xf4e7,0xf4e7,0xf4e7,0x6920,0xF81F,0x6920,0x6920,0xf4e7,0xf4e7,0x6920,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xdd84,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xf4e7,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0xdd84,0xf4e7,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xf4e7,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xf4e7,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0xf4e7,0x6920,0xF81F,0xF81F,0xF81F};
Image doors_plus_mask = Image(doors_plus_maskData);
const uint16_t PROGMEM  exits_plus_maskData[] = {8,8,6, 0, 0xF81F, 0, 0xa63a,0x7c52,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xa63a,0x4249,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xa63a,0x7c52,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xa63a,0x4249,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xa63a,0x4249,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xa63a,0x7c52,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xa63a,0x4249,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xa63a,0x7c52,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xa63a,0x7c52,0x7c52,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xa63a,0x4249,0x7c52,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xa63a,0x7c52,0x7c52,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xa63a,0x4249,0x7c52,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xa63a,0x4249,0x7c52,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xa63a,0x7c52,0x7c52,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xa63a,0x4249,0x7c52,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xa63a,0x7c52,0x7c52,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x4249,0x7c52,0x4249,0x4249,0x7c52,0x4249,0x7c52,0xa63a,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x4249,0x7c52,0x4249,0x4249,0x7c52,0x4249,0x7c52,0xa63a,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0xa63a,0x7c52,0x7c52,0xa63a,0x7c52,0x7c52,0x4249,0x4249,0xa63a,0x4249,0x7c52,0xa63a,0x4249,0x7c52,0x4249,0x4249,0xa63a,0x7c52,0x7c52,0xa63a,0x7c52,0x7c52,0x4249,0x4249,0xa63a,0x4249,0x7c52,0xa63a,0x4249,0x7c52,0x4249,0x4249,0xa63a,0x4249,0x7c52,0xa63a,0x4249,0x7c52,0x4249,0x4249,0xa63a,0x7c52,0x7c52,0xa63a,0x7c52,0x7c52,0x4249,0x4249,0xa63a,0x4249,0x7c52,0xa63a,0x4249,0x7c52,0x4249,0x4249,0xa63a,0x7c52,0x7c52,0xa63a,0x7c52,0x7c52,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x4249,0x7c52,0x4249,0x4249,0x7c52,0x4249,0x7c52,0xa63a,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x4249,0x7c52,0x4249,0x4249,0x7c52,0x4249,0x7c52,0xa63a,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249};
Image exits_plus_mask = Image(exits_plus_maskData);
const uint16_t PROGMEM  grejen_plus_maskData[] = {8,8,4, 0, 0xF81F, 0, 0xF81F,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0xF81F,0x1045,0x4249,0x1045,0xF81F,0xF81F,0x1045,0x4249,0x1045,0x1045,0x7c52,0x1045,0xF81F,0xF81F,0x1045,0x7c52,0x1045,0x1045,0x7c52,0x7c52,0x1045,0x1045,0x7c52,0x7c52,0x1045,0x4249,0x1045,0x1045,0x4249,0x4249,0x1045,0x1045,0x4249,0x7c52,0x1045,0x1045,0x7c52,0x7c52,0x1045,0x1045,0x7c52,0x7c52,0x1045,0xF81F,0x1045,0x1045,0xF81F,0x1045,0x7c52,0x7c52,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x7c52,0xF81F,0xF81F,0x1045,0xF81F,0xF81F,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x4249,0x1045,0x1045,0x4249,0x1045,0xF81F,0xF81F,0x1045,0x7c52,0x1045,0x1045,0x7c52,0x1045,0xF81F,0xF81F,0x1045,0x7c52,0x1045,0x1045,0x7c52,0x1045,0x1045,0x1045,0x7c52,0x1045,0x4249,0x4249,0x1045,0x7c52,0x1045,0x4249,0x1045,0x1045,0x7c52,0x7c52,0x1045,0x1045,0x4249,0x7c52,0x1045,0xF81F,0x1045,0x1045,0xF81F,0x1045,0x7c52,0x7c52,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x7c52,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0xF81F,0xF81F,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x4249,0x1045,0x1045,0x4249,0x1045,0xF81F,0xF81F,0x1045,0x7c52,0x1045,0x1045,0x7c52,0x1045,0xF81F,0xF81F,0x1045,0x7c52,0x7c52,0x7c52,0x7c52,0x1045,0x1045,0x1045,0x7c52,0x1045,0x7c52,0x7c52,0x1045,0x7c52,0x1045,0x4249,0x1045,0x1045,0x7c52,0x7c52,0x1045,0x1045,0x4249,0x7c52,0x1045,0xF81F,0x1045,0x1045,0xF81F,0x1045,0x7c52,0x1045,0x4249,0x1045,0xF81F,0xF81F,0x1045,0x4249,0x1045,0x1045,0x7c52,0x1045,0xF81F,0xF81F,0x1045,0x7c52,0x1045,0x1045,0x7c52,0x7c52,0x1045,0x1045,0x7c52,0x7c52,0x1045,0x4249,0x1045,0x1045,0x4249,0x4249,0x1045,0x1045,0x4249,0x4249,0x1045,0x1045,0x7c52,0x7c52,0x1045,0x1045,0x4249,0x7c52,0x1045,0xF81F,0x1045,0x1045,0xF81F,0x1045,0x7c52,0x7c52,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x7c52,0x7c52,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x7c52};
Image grejen_plus_mask = Image(grejen_plus_maskData);
const uint16_t PROGMEM  herab_plus_maskData[] = {8,8,2, 0, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x5029,0x5029,0x5029,0xF81F,0xF81F,0xF81F,0x5029,0x5029,0xe24a,0xe24a,0xe24a,0x5029,0x5029,0x5029,0xe24a,0xe24a,0xc94c,0xc94c,0xc94c,0xc94c,0xe24a,0xe24a,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0x5029,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xF81F,0x5029,0x5029,0x5029,0x5029,0x5029,0x5029,0x5029,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x5029,0x5029,0x5029,0xF81F,0xF81F,0xF81F,0xF81F,0x5029,0xe24a,0xe24a,0xe24a,0x5029,0x5029,0xF81F,0xF81F,0xe24a,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0x5029,0x5029,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0xc94c,0x5029,0x5029,0x5029,0x5029,0x5029,0x5029,0x5029,0x5029,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F};
Image herab_plus_mask = Image(herab_plus_maskData);
const uint16_t PROGMEM  HUD_plus_maskData[] = {19,7,1, 0, 0xF81F, 0, 0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x694a,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x694a,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x694a,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x694a,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x694a,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a};
Image HUD_plus_mask = Image(HUD_plus_maskData);
const uint16_t PROGMEM  items_plus_maskData[] = {8,8,7, 0, 0xF81F, 0, 0xF81F,0xF81F,0x6920,0x6920,0x6920,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0xf6c7,0xf5e4,0xf5e4,0xf6c7,0x6920,0xF81F,0x6920,0xf6c7,0xf5e4,0xc382,0xc382,0xf6c7,0xf6c7,0x6920,0x6920,0xf5e4,0xc382,0xf5e4,0xf6c7,0xc382,0xf5e4,0x6920,0x6920,0xf5e4,0xc382,0xf6c7,0xf5e4,0xc382,0xf5e4,0x6920,0x6920,0xf6c7,0xf6c7,0xc382,0xc382,0xf5e4,0xf6c7,0x6920,0xF81F,0x6920,0xf684,0xf5e4,0xf5e4,0xf6c7,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0x6920,0x6920,0x6920,0xF81F,0xF81F,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x6227,0x6227,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x6227,0x72a8,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1dea,0x44e3,0x44e3,0x1dea,0x1045,0x1045,0x1045,0x1dea,0x1dea,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0x1045,0x1dea,0x1dea,0x44e3,0x44e3,0x1dea,0x1dea,0x1045,0x1045,0x1dea,0x1dea,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0x1045,0x1045,0x1dea,0x44e3,0x44e3,0x1dea,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0x1045,0x1dea,0x1045,0x1045,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x0,0x0,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x0,0xa63a,0x7c52,0x0,0x0,0x0,0x0,0x0,0xa63a,0x0,0x0,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x7c52,0x0,0x0,0xa63a,0x0,0xa63a,0x0,0x7c52,0x0,0xa63a,0x7c52,0x0,0x0,0x7c52,0x0,0x7c52,0xF81F,0x0,0x0,0xF81F,0xF81F,0x0,0xF81F,0x0,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0x6920,0x6920,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0xf6c7,0xf6c7,0xf5e4,0xf5e4,0x6920,0xF81F,0x6920,0xf6c7,0xf6c7,0xf5e4,0x0,0xf5e4,0xf5e4,0x6920,0x6920,0xf6c7,0xf5e4,0x0,0x0,0xf5e4,0xf5e4,0x6920,0x6920,0xf5e4,0xf5e4,0xf5e4,0x0,0xf5e4,0xc382,0x6920,0x6920,0xf5e4,0xf5e4,0xf5e4,0x0,0xf5e4,0xc382,0x6920,0xF81F,0x6920,0xf5e4,0xc382,0xc382,0xc382,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0x6920,0x6920,0x6920,0xF81F,0xF81F,0xF81F,0xF81F,0x6920,0x6920,0x6920,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0xf6c7,0xf6c7,0xf5e4,0xf5e4,0x6920,0xF81F,0x6920,0xf6c7,0xf6c7,0x0,0x0,0xf5e4,0xf5e4,0x6920,0x6920,0xf6c7,0xf5e4,0xf5e4,0x0,0xf5e4,0xf5e4,0x6920,0x6920,0xf5e4,0xf5e4,0x0,0xf5e4,0xf5e4,0xc382,0x6920,0x6920,0xf5e4,0xf5e4,0x0,0x0,0xf5e4,0xc382,0x6920,0xF81F,0x6920,0xf5e4,0xc382,0xc382,0xc382,0x6920,0xF81F,0xF81F,0xF81F,0x6920,0x6920,0x6920,0x6920,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0xf809,0x1045,0x1045,0xF81F,0xF81F,0x1045,0xf809,0x1045,0x1045,0x1045,0xf809,0x1045,0xF81F,0x1045,0x1045,0x1045,0xf809,0x1045,0x1045,0x1045,0xF81F,0xf809,0x1045,0xf809,0xf809,0xf809,0x1045,0xf809,0x0,0x1045,0x1045,0x1045,0xf809,0x1045,0x1045,0x1045,0xF81F,0x1045,0xf809,0x1045,0x1045,0x1045,0xf809,0x1045,0xF81F,0xF81F,0x1045,0x1045,0xf809,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x0,0xF81F,0xF81F,0xF81F,0xF81F};
Image items_plus_mask = Image(items_plus_maskData);
const uint16_t PROGMEM  karame_plus_maskData[] = {16,8,4, 0, 0xF81F, 0, 0xF81F,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x194a,0x1045,0x1045,0x19f0,0x19f0,0x19f0,0x1045,0x19f0,0x19f0,0x19f0,0x1045,0x1045,0x1045,0x19f0,0x194a,0x1045,0x1045,0xF81F,0x19f0,0x194a,0x194a,0x1045,0x19f0,0x194a,0x194a,0x1045,0x19f0,0x19f0,0x194a,0x194a,0x1045,0x19f0,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0xa63a,0xf809,0x194a,0x19f0,0x1045,0x1045,0xF81F,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0xa63a,0xf809,0x194a,0x194a,0x1045,0x1045,0xF81F,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x194a,0x1045,0x19f0,0x194a,0x1045,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x1045,0x1045,0x194a,0x19f0,0x1045,0x1045,0xF81F,0xF81F,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x194a,0x194a,0x194a,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x1045,0x19f0,0x19f0,0x19f0,0x1045,0x1045,0x1045,0x19f0,0x19f0,0x194a,0x194a,0x1045,0x19f0,0x194a,0x194a,0x1045,0x19f0,0x194a,0x194a,0x1045,0x19f0,0x19f0,0x194a,0x19f0,0x1045,0x1045,0x1045,0xF81F,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0xa63a,0xf809,0x194a,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0xa63a,0xf809,0x194a,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x194a,0x1045,0x1045,0x1045,0xF81F,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x1045,0x1045,0x194a,0x194a,0x194a,0x194a,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F,0xF81F,0x1045,0x1045,0x194a,0x194a,0x1045,0x1045,0x1045,0x19f0,0x19f0,0x19f0,0x1045,0x19f0,0x19f0,0x19f0,0x1045,0x1045,0x19f0,0x194a,0x1045,0x194a,0x194a,0x194a,0x194a,0x1045,0x19f0,0x194a,0x194a,0x1045,0x19f0,0x194a,0x194a,0xF81F,0x1045,0x1045,0x194a,0x194a,0xf809,0xa63a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0xF81F,0x1045,0x1045,0x194a,0x194a,0xf809,0xa63a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x19f0,0x194a,0x1045,0x194a,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0xF81F,0x1045,0x1045,0x194a,0x194a,0x1045,0x1045,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x1045,0x19f0,0x19f0,0x194a,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F,0x1045,0x19f0,0x19f0,0x194a,0x194a,0x1045,0x1045,0x1045,0x19f0,0x19f0,0x19f0,0x1045,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0x1045,0x1045,0x1045,0x194a,0x194a,0x194a,0x194a,0x1045,0x19f0,0x194a,0x194a,0x1045,0x19f0,0x194a,0x194a,0x1045,0x19f0,0x19f0,0x194a,0x194a,0xf809,0xa63a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x19f0,0x194a,0x194a,0x194a,0xf809,0xa63a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0xF81F,0x1045,0x1045,0x1045,0x194a,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0x19f0,0x194a,0x194a,0x194a,0x1045,0x1045,0x1045,0x194a,0x194a,0x194a,0x1045,0x194a,0x194a,0x194a,0x1045,0xF81F,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x1045,0xF81F};
Image karame_plus_mask = Image(karame_plus_maskData);
const uint16_t PROGMEM  koomer_plus_maskData[] = {8,8,5, 0, 0xF81F, 0, 0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0x1045,0x44e3,0x1dea,0x1045,0x1045,0x1dea,0x1045,0xF81F,0x1045,0x44e3,0x1045,0xF81F,0xF81F,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x1dea,0x1dea,0x1dea,0x1045,0xF81F};
Image koomer_plus_mask = Image(koomer_plus_maskData);
const uint16_t PROGMEM  koomerking_plus_maskData[] = {16,8,5, 0, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x44e3,0x44e3,0x44e3,0x44e3,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0xff9d,0xff9d,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0xff9d,0x694a,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x44e3,0x44e3,0x44e3,0x44e3,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0xff9d,0xff9d,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0xff9d,0x694a,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x44e3,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0xff9d,0xff9d,0x1dea,0x1dea,0x1045,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0xff9d,0x694a,0x1dea,0x1dea,0x1dea,0x1045,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0xff9d,0xff9d,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0xff9d,0x694a,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0xff9d,0xff9d,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0xff9d,0x694a,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x44e3,0x44e3,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F};
Image koomerking_plus_mask = Image(koomerking_plus_maskData);
const uint16_t PROGMEM  krynder_plus_maskData[] = {8,8,8, 0, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0x7a01,0xd541,0xd541,0x7a01,0xF81F,0xF81F,0x7a01,0x7a01,0xd541,0xd541,0xd541,0xd541,0x7a01,0x7a01,0xb3c1,0xd541,0x7a01,0xd541,0xd541,0xd541,0xd541,0x7a01,0xb3c1,0xd541,0xd541,0xd541,0xd541,0xd541,0xb3c1,0x7a01,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xb3c1,0xF81F,0x7a01,0xd541,0xd541,0xd541,0xd541,0xb3c1,0x7a01,0xF81F,0xF81F,0x7a01,0xd541,0xd541,0xb3c1,0x7a01,0x7a01,0xF81F,0x7a01,0xd541,0x7a01,0xd541,0xd541,0xb3c1,0x7a01,0xF81F,0x7a01,0x7a01,0xd541,0xd541,0xb3c1,0x7a01,0xF81F,0x7a01,0xd541,0xb3c1,0x7a01,0xd541,0xd541,0xd541,0x7a01,0xb3c1,0xd541,0xd541,0xb3c1,0xd541,0xd541,0xb3c1,0x7a01,0xd541,0xd541,0xd541,0xd541,0xd541,0xb3c1,0x7a01,0xd541,0xd541,0x7a01,0xb3c1,0xd541,0xd541,0xd541,0xd541,0xd541,0x7a01,0xb3c1,0xd541,0xd541,0xb3c1,0xd541,0xd541,0xb3c1,0x7a01,0xd541,0xd541,0xd541,0x7a01,0xb3c1,0xd541,0x7a01,0xF81F,0x7a01,0xb3c1,0xd541,0xd541,0x7a01,0x7a01,0xF81F,0xF81F,0x7a01,0xb3c1,0xd541,0xd541,0x7a01,0xF81F,0xF81F,0xF81F,0x7a01,0x7a01,0xd541,0xd541,0xd541,0x7a01,0x7a01,0x7a01,0xd541,0xb3c1,0xb3c1,0xd541,0xb3c1,0x7a01,0xb3c1,0xd541,0xd541,0xd541,0xd541,0xd541,0xb3c1,0xd541,0xd541,0xd541,0xd541,0xb3c1,0xd541,0xd541,0xd541,0xd541,0xd541,0xb3c1,0x7a01,0xb3c1,0xd541,0xb3c1,0xb3c1,0xd541,0x7a01,0x7a01,0x7a01,0xd541,0xd541,0xd541,0x7a01,0x7a01,0xF81F,0xd541,0xb3c1,0x7a01,0xd541,0xd541,0xb3c1,0x7a01,0xF81F,0x7a01,0xd541,0xd541,0x7a01,0x7a01,0xb3c1,0xd541,0x7a01,0xd541,0xd541,0xb3c1,0xd541,0x7a01,0x7a01,0xd541,0xd541,0xb3c1,0x7a01,0xb3c1,0xd541,0xd541,0xb3c1,0xb3c1,0xd541,0x7a01,0x7a01,0xd541,0xd541,0xd541,0xd541,0xd541,0x7a01,0x7a01,0xd541,0xd541,0xd541,0xd541,0xd541,0x7a01,0x7a01,0xd541,0xb3c1,0xb3c1,0xd541,0xd541,0xb3c1,0x7a01,0xb3c1,0xd541,0xd541,0x7a01,0x7a01,0xd541,0xb3c1,0xd541,0xd541,0x7a01,0xd541,0xb3c1,0x7a01,0x7a01,0xd541,0xd541,0x7a01,0xF81F,0x7a01,0xd541,0xd541,0x7a01,0xF81F,0xF81F,0xF81F,0x7a01,0xd541,0xd541,0xd541,0xd541,0x7a01,0x7a01,0xF81F,0xd541,0xd541,0xd541,0xd541,0x7a01,0xd541,0xb3c1,0x7a01,0xb3c1,0xd541,0xd541,0xd541,0xd541,0xd541,0xb3c1,0x7a01,0xb3c1,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0x7a01,0x7a01,0xb3c1,0xd541,0xd541,0xd541,0xd541,0x7a01,0xF81F,0x7a01,0x7a01,0xb3c1,0xd541,0xd541,0x7a01,0xF81F,0xF81F,0x7a01,0xb3c1,0xd541,0xd541,0x7a01,0xb3c1,0x7a01,0xF81F,0xF81F,0x7a01,0xb3c1,0xd541,0xd541,0x7a01,0x7a01,0x7a01,0x7a01,0xd541,0xd541,0xd541,0x7a01,0xb3c1,0xd541,0x7a01,0x7a01,0xb3c1,0xd541,0xd541,0xb3c1,0xd541,0xd541,0xb3c1,0xd541,0x7a01,0xb3c1,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xb3c1,0x7a01,0xd541,0xb3c1,0xd541,0xd541,0xb3c1,0xd541,0xd541,0xb3c1,0x7a01,0x7a01,0xd541,0xb3c1,0x7a01,0xd541,0xd541,0xd541,0x7a01,0xF81F,0x7a01,0x7a01,0xd541,0xd541,0xb3c1,0x7a01,0xF81F,0xF81F,0xF81F,0x7a01,0xd541,0xd541,0xb3c1,0x7a01,0xF81F,0x7a01,0x7a01,0xd541,0xd541,0xd541,0x7a01,0x7a01,0xF81F,0xb3c1,0x7a01,0xb3c1,0xd541,0xb3c1,0xb3c1,0xd541,0x7a01,0xd541,0xd541,0xb3c1,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xd541,0xb3c1,0xd541,0xd541,0x7a01,0xd541,0xb3c1,0xb3c1,0xd541,0xb3c1,0x7a01,0xb3c1,0xF81F,0x7a01,0x7a01,0xd541,0xd541,0xd541,0x7a01,0x7a01,0xF81F,0x7a01,0xb3c1,0xd541,0xd541,0x7a01,0x7a01,0xF81F,0x7a01,0xd541,0xb3c1,0x7a01,0x7a01,0xd541,0xd541,0x7a01,0xd541,0xd541,0x7a01,0x7a01,0xd541,0xb3c1,0xd541,0xd541,0xd541,0xb3c1,0xb3c1,0xd541,0xd541,0xb3c1,0x7a01,0xb3c1,0x7a01,0xd541,0xd541,0xd541,0xd541,0xd541,0x7a01,0x7a01,0x7a01,0x7a01,0xd541,0xd541,0xd541,0xd541,0xd541,0x7a01,0xb3c1,0x7a01,0xb3c1,0xd541,0xd541,0xb3c1,0xb3c1,0xd541,0xd541,0xd541,0xb3c1,0xd541,0x7a01,0x7a01,0xd541,0xd541,0x7a01,0xd541,0xd541,0x7a01,0x7a01,0xb3c1,0xd541,0x7a01};
Image krynder_plus_mask = Image(krynder_plus_maskData);
const uint16_t PROGMEM  logo_plus_maskData[] = {40,64,1, 0, 0xF81F, 0, 0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xf622,0xf622,0xf622,0xf622,0xf622,0xf622,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xf622,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xf622,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0xffff,0x1,0x1,0x1,0x1,0x1,0x1,0xffff,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0xffff,0x1,0x1,0xffff,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0xffff,0xffff,0x1,0x1,0xffff,0xffff,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x694a,0x0,0x694a,0x0,0x0,0x0,0x694a,0x0,0x694a,0x694a,0x1,0x694a,0x694a,0x694a,0x1,0x1,0x694a,0x694a,0x694a,0x1,0x694a,0x694a,0x0,0x694a,0x0,0x0,0x0,0x694a,0x0,0x694a,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x694a,0x694a,0x694a,0x0,0x694a,0x0,0x0,0x0,0x694a,0x0,0x694a,0x694a,0x1,0x694a,0x694a,0x694a,0x1,0x1,0x694a,0x694a,0x694a,0x1,0x694a,0x694a,0x0,0x694a,0x0,0x0,0x0,0x694a,0x0,0x694a,0x694a,0x694a,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0xffff,0xffff,0x1,0x1,0xffff,0xffff,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0xffff,0x1,0x1,0xffff,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0xffff,0x1,0x1,0x1,0x1,0x1,0x1,0xffff,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xf622,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xf622,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xf622,0xf622,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xf622,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xf622,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xf622,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xff64,0xff64,0xff64,0x1,0x1,0x1,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xf622,0xf622,0xf622,0xf622,0xf622,0xf622,0xf622,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xf622,0xf622,0xf622,0xf622,0xf622,0xf622,0xf622,0xf622,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0xff64,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x0,0xff64,0xff64,0xff64,0x0,0xff64,0x0,0x0,0x0,0xff64,0x0,0xff64,0xff64,0xff64,0x0,0xff64,0xff64,0xff64,0x0,0xff64,0xff64,0xff64,0x0,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x0,0xff64,0x0,0xff64,0x0,0xff64,0xff64,0x0,0xff64,0xff64,0x0,0xff64,0x0,0x0,0x0,0xff64,0x0,0x0,0x0,0xff64,0x0,0xff64,0x0,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x0,0xff64,0x0,0xff64,0x0,0xff64,0x0,0xff64,0x0,0xff64,0x0,0xff64,0xff64,0x0,0x0,0xff64,0x0,0xff64,0x0,0xff64,0x0,0xff64,0x0,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x0,0xff64,0x0,0xff64,0x0,0xff64,0x0,0x0,0x0,0xff64,0x0,0xff64,0x0,0x0,0x0,0xff64,0x0,0xff64,0x0,0xff64,0xff64,0xff64,0x0,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x0,0xff64,0xff64,0xff64,0x0,0xff64,0x0,0x0,0x0,0xff64,0x0,0xff64,0xff64,0xff64,0x0,0xff64,0xff64,0xff64,0x0,0xff64,0x0,0xff64,0x0,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x694a,0x694a,0x694a,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x694a,0x694a,0x694a,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0xff64,0x1,0xff64,0x1,0xff64,0xff64,0xff64,0x1,0xff64,0xff64,0xff64,0x1,0x1,0xff64,0xff64,0xff64,0x1,0xff64,0xff64,0xff64,0x1,0xff64,0xff64,0xff64,0x1,0xff64,0x1,0x1,0xff64,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0xff64,0x1,0xff64,0x1,0xff64,0x0,0xff64,0x1,0xff64,0x0,0xff64,0x1,0x1,0x1,0xff64,0x1,0x1,0x1,0x1,0xff64,0x1,0xff64,0x0,0xff64,0x1,0xff64,0xff64,0x1,0xff64,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0xff64,0xff64,0xff64,0x1,0xff64,0x0,0xff64,0x1,0xff64,0xff64,0xff64,0x1,0x1,0x1,0xff64,0x1,0x1,0x1,0xff64,0x1,0x1,0xff64,0x0,0xff64,0x1,0xff64,0xff64,0x1,0xff64,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0xff64,0x1,0xff64,0x1,0xff64,0x0,0xff64,0x1,0xff64,0xff64,0x1,0x1,0x1,0x1,0xff64,0x1,0x1,0xff64,0x1,0x1,0x1,0xff64,0x0,0xff64,0x1,0xff64,0x1,0xff64,0xff64,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0xff64,0x1,0xff64,0x1,0xff64,0xff64,0xff64,0x1,0xff64,0x1,0xff64,0x1,0x1,0xff64,0xff64,0xff64,0x1,0xff64,0xff64,0xff64,0x1,0xff64,0xff64,0xff64,0x1,0xff64,0x1,0x1,0xff64,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x694a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0xa63a,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0x1,0xa63a,0x1,0xa63a,0x1,0xa63a,0xa63a,0x1,0x1,0x1,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0x1,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0x1,0x1,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0x1,0x1,0xa63a,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0x1,0xa63a,0x1,0x1,0x1,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0x1,0x1,0x1,0xa63a,0x1,0x1,0x1,0x1,0xa63a,0x1,0xa63a,0x1,0xa63a,0x1,0xa63a,0xa63a,0x1,0xa63a,0x1,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0x1,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0x1,0x1,0x1,0xa63a,0x1,0xa63a,0x1,0x1,0xa63a,0x1,0xa63a,0x1,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0xa63a,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0xa63a,0x1,0xa63a,0xa63a,0xa63a,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1};
Image logo_plus_mask = Image(logo_plus_maskData);
const uint16_t PROGMEM  omega_plus_maskData[] = {8,8,8, 0, 0xF81F, 0, 0xF81F,0xF81F,0x1045,0xff64,0xff64,0x1045,0xF81F,0xF81F,0x1045,0x1045,0x1045,0xff64,0x1045,0x2b90,0x1045,0xF81F,0xff64,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0x1045,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x1045,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0x1045,0x2b90,0x1045,0xF81F,0x1045,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0xff64,0xff64,0x1045,0xF81F,0xF81F,0x1045,0x1045,0x1045,0xff64,0x1045,0x2b90,0x1045,0xF81F,0xff64,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0x1045,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x2b90,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0x2b90,0x1045,0xF81F,0xF81F,0x1045,0x2b90,0x2b90,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0xff64,0xff64,0x1045,0xF81F,0xF81F,0x1045,0x1045,0x1045,0xff64,0x1045,0x2b90,0x1045,0xF81F,0xff64,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0x1045,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x1045,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x2b90,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0xff64,0xff64,0x1045,0xF81F,0xF81F,0x1045,0x1045,0x1045,0xff64,0x1045,0x2b90,0x1045,0xF81F,0xff64,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0x1045,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0xff64,0xff64,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0xff64,0x1045,0x1045,0x1045,0xF81F,0x1045,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0xff64,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x1045,0x19f0,0x1045,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0x1045,0x2b90,0x1045,0xF81F,0xF81F,0x1045,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0x1045,0xF81F,0xF81F,0x1045,0xff64,0xff64,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0xff64,0x1045,0x1045,0x1045,0xF81F,0x1045,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0xff64,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0x1045,0x1045,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0x1045,0x2b90,0x2b90,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x2b90,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0xff64,0xff64,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0xff64,0x1045,0x1045,0x1045,0xF81F,0x1045,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0xff64,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x1045,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x2b90,0x2b90,0x1045,0xF81F,0xF81F,0x1045,0x1045,0x2b90,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0xff64,0xff64,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0xff64,0x1045,0x1045,0x1045,0xF81F,0x1045,0x2b90,0x2b90,0x1045,0x2b90,0x2b90,0xff64,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1045,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x1045,0x2b90,0x1045,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0x2b90,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x2b90,0x1045,0x1045,0xF81F,0xF81F,0xF81F};
Image omega_plus_mask = Image(omega_plus_maskData);
const uint16_t PROGMEM  omegaone_plus_maskData[] = {16,16,3, 0, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0xc618,0xc618,0xc618,0xc618,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0xc618,0xc618,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0xc618,0xc618,0xc618,0x7c52,0x7c52,0xc618,0xc618,0xc618,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0xF81F,0x4249,0x4249,0x7c52,0x7c52,0x7c52,0x7c52,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x4249,0x4249,0xF81F,0x4249,0xc618,0xc618,0xc618,0x7c52,0x7c52,0xc618,0xc618,0xc618,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0x4249,0x4249,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0x4249,0xc618,0xc618,0xc618,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0xc618,0xc618,0xc618,0xc618,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0xc618,0xc618,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0xc618,0xc618,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0x7c52,0x7c52,0xc618,0xc618,0xc618,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0xc618,0xc618,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0xc618,0xc618,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0xc618,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x7c52,0x7c52,0x7c52,0x7c52,0x7c52,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0xc618,0xc618,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x4249,0x4249,0x4249,0x4249,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F};
Image omegaone_plus_mask = Image(omegaone_plus_maskData);
const uint16_t PROGMEM  planet_plus_maskData[] = {32,32,1, 0, 0xF81F, 0, 0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x1045,0x1045,0x1045,0x1dea,0x1dea,0x1dea,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x19f0,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x19f0,0x1364,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1364,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x2b90,0x2b90,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x2b90,0x2b90,0x1dea,0x1dea,0x1364,0x2b90,0x1dea,0x1dea,0x1dea,0x19f0,0x1364,0x19f0,0x19f0,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x2b90,0x2b90,0x2b90,0x1364,0x1364,0x2b90,0x1dea,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x1dea,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x2b90,0x2b90,0x1dea,0x2b90,0x2b90,0x2b90,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x2b90,0x2b90,0x2b90,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1045,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x2b90,0x2b90,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1364,0x1045,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x19f0,0x1045,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x19f0,0x1dea,0x1364,0x19f0,0x1045,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x1045,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0x1045,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x19f0,0x19f0,0x19f0,0x1dea,0x19f0,0x19f0,0x19f0,0x1364,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x1364,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1364,0x1dea,0x19f0,0x1dea,0x19f0,0x19f0,0x19f0,0x1dea,0x19f0,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1364,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x1dea,0x19f0,0x19f0,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1364,0x1364,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1364,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1364,0x1dea,0x1dea,0x19f0,0x19f0,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1364,0x1364,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1364,0x1dea,0x1dea,0x1dea,0x19f0,0x19f0,0x19f0,0x19f0,0x1364,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1364,0x1364,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x19f0,0x1dea,0x1dea,0x1dea,0x19f0,0x1dea,0x1364,0x19f0,0x19f0,0x19f0,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1364,0x1364,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1dea,0x1364,0x19f0,0x19f0,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1364,0x1364,0x1364,0x1364,0x1dea,0x1dea,0x1dea,0x1364,0x1364,0x1045,0x1045,0x1045,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0x1364,0x1364,0x1364,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F};
Image planet_plus_mask = Image(planet_plus_maskData);




/////////////////////////////////////////////////////////////////////////////////
//GLOBAL VARIABLES
/////////////////////////////////////////////////////////////////////////////////

int8_t gameState;
uint16_t frameCount;
#define PlayerWIdth 8
#define PlayerHeight 8
#define GRAVITY 4
#define DIR_LEFT    -1
#define DIR_NONE    0
#define DIR_RIGHT   1
#define PLAYER_DAMAGE_TIME 60
#define SCREEN_WIDTH  80
#define SCREEN_HEIGHT 64
char UNIQUES = 0B00000000;
               //|||||||└-------------------------------> 0 energy tank 1
               //||||||└--------------------------------> 1 energy tank 2
               //|||||└---------------------------------> 2 key
               //||||└----------------------------------> 3 energy blask
               //|||└-----------------------------------> 4 charge beam
               //||└------------------------------------> 5 power suit
               //|└-------------------------------------> 6 koomer king
               //└--------------------------------------> 7 karame


struct Rect
{
  int16_t x;      
  int16_t y;      
  uint8_t width;  
  uint8_t height; 
};

struct Point
{
  int16_t x; 
  int16_t y; 
};

struct Player{
  Point point = {.x = 0, .y = 0};
  int8_t damageTime;
  uint8_t map_id = 0;
  uint8_t prev_map_id = 0;
  int8_t JUMP=0;
  int8_t VSPEED=0;
  int8_t YSPEED=0;
  int8_t JUMPHEIGHT=40;
  int8_t PSPEED = 32;//16;//8;
  int16_t LIFE=100;
  int16_t MAXLIFE=100;
  int8_t POWER=1;
  bool RUN=false;
  bool KEY=false;
  bool POWERSUIT=false;
  bool FACELEFT=false;
  bool FLASH=false;
  int8_t FIRE=0; 
  int8_t frame;
  int8_t cooldown=0;
};

//projectile structure
struct Projectile{
   Rect rect = {.x = 0, .y = 0, .width = 8, .height = 8};
   boolean  Exists=false;
   boolean  dir_left;//Direction the projectiles is moving
   int8_t   PSPEED;
   int8_t   POWER;
};

#define KOOMER_WAITING 0
#define KOOMER_DROPPING 1
#define KOOMER_MOVING 2
#define GREJEN_ON_GROUND 0
#define GREJEN_IN_AIR    1
#define KRYNDER_LOOKING 0
#define KRYNDER_ROLL_LEFT 1
#define KRYNDER_ROLL_RIGHT 2
#define KOOMER_KING_WAITING 0
#define KOOMER_KING_DROPPING 1
#define KOOMER_KING_MOVING 2
#define KOOMER_KING_HOPPING 3

#define KARAME_INITIAL_WAITING 0
#define KARAME_WAITING 1
#define KARAME_CROSSING_ROOM 2
#define KARAME_HEAD_POKES_OUT_TO_SPIT_ACID 3
#define KARAME_SPITS_ACID 4
#define KARAME_HEAD_POKES_OUT_TO_SHAKE_ROOM 5
#define KARAME_SHAKES_ROOM 6
#define KARAME_PULLS_HEAD_BACK 7

struct RainDrop{
  int8_t x=0;
  int8_t y=0;
};

/*
  0:east exit
  1:west exit
  2:north exit
  3:south exit
  4-nirth/east/south/west door
  5=Energy Max Booster
  6=Increased Energy Recharge Rate
  7=key
  8=energy orb
  
  20=koomer/slime
  21=herab
  22=grejen
  23=krynder
  24=Koomer King
  25-karame
*/
struct Entity{    
  public:
   Point point = {.x = 0, .y = 0};
   int8_t    width,height;
   int8_t    life;
   int8_t    pspeed,yspeed=0;//how fast the player moves on the y axis;
   bool      CHARGE=false,Exists=false,FLASH=false;
   int8_t    frame = 0;
   int8_t    Direct=0;//-1,0,1    
   int8_t    id=0;   
   int8_t    Type;
   uint8_t   animation_frames=0;
   uint8_t   animation = 0;  
   uint8_t   action_state = 0;  
};

#define TotalEntities 14
#define TotalMyProjectiles 5
//#define TotalSnowFlakes 20
#define TotalRainDrops 20

Player player;
Projectile myprojectiles[TotalMyProjectiles];
Entity entities[TotalEntities];
//Snowflake snowflakes[TotalSnowFlakes];
RainDrop raindrops[TotalRainDrops];
bool Raining=false;
int8_t karame_heads = 4;





/////////////////////////////////////////////////////////////////////////////////
//Map & Tileset Data
/////////////////////////////////////////////////////////////////////////////////
int16_t WinX=0;
int16_t WinY=0;
#define w 80
#define h 64
#define ScreenWidth 12//viewable tiles in width
#define ScreenHeight 10//viewable tiles in height
int16_t mapDataStart=0;

const uint8_t MapData[2732] PROGMEM = {
  //////////////////////////////////////
  //81 screens in 20 rooms
  /////////////////////////////////////
  //map0
  //71,//length - 1x2
  //16,16,2,4,0,1,84,0,0,21,84,0,0,21,80,0,0,21,80,0,0,21,64,0,0,5,64,0,0,5,64,63,192,1,64,0,0,1,84,0,0,1,84,0,0,1,80,252,0,1,64,0,0,1,64,0,80,0,0,21,85,85,85,90,170,170,85,89,85,85,85,
  199,//length - 2x3
  32,24,2,4,0,1,
  84,0,0,0,0,0,0,21,
  84,0,0,0,0,0,0,5,
  80,0,0,0,0,0,0,1,
  80,0,0,0,0,0,0,1,
  80,0,0,0,0,0,0,1,
  64,0,0,0,0,0,0,0,
  0,0,0,5,85,84,15,245,
  95,3,252,1,85,80,3,245,
  92,0,0,0,5,64,0,5,
  80,0,0,0,0,64,0,5,
  80,0,0,0,0,0,0,5,
  84,0,0,0,0,0,0,5,
  84,0,0,0,0,0,0,5,
  84,0,0,0,0,0,0,5,
  85,0,0,0,0,0,0,5,
  85,0,0,0,0,0,0,21,
  80,0,0,0,0,0,0,21,
  80,0,0,0,0,0,0,5,
  80,0,0,5,85,0,0,5,
  64,0,0,21,85,80,0,1,
  0,21,85,85,85,85,64,1,
  85,90,170,170,170,149,84,0,
  86,169,85,85,85,170,85,85,
  86,85,85,85,85,86,85,85,
  
  //map1
  39,//length - 1X1
  16,8,2,4,0,1,
  85,85,85,85,
  85,85,85,85,
  85,0,21,81,
  80,0,0,65,
  64,0,0,1,
  0,0,0,5,
  85,85,127,85,
  85,85,85,85,
  
  //map2
  231,//length - 1X7
  16,56,2,4,0,1,
  85,85,85,85,
  84,21,64,85,
  80,0,0,21,
  64,0,0,5,
  64,0,0,5,
  0,15,192,1,
  95,0,0,0,
  92,0,0,61,
  
  80,0,0,13,
  80,255,252,1,
  64,0,0,1,
  64,0,0,1,
  0,0,3,245,
  124,0,0,245,
  112,255,192,21,
  64,0,0,85,
  
  64,0,1,85,
  64,0,1,85,
  64,15,193,85,
  64,0,0,85,
  127,0,0,85,
  64,0,0,85,
  64,15,192,85,
  64,0,0,21,
  
  67,192,0,5,
  64,0,0,1,
  80,15,192,0,
  64,0,0,53,
  0,0,3,245,
  124,0,0,61,
  112,15,192,1,
  64,0,0,1,
  
  127,0,3,213,
  92,0,0,21,
  80,15,192,1,
  64,0,0,1,
  127,0,3,245,
  92,0,0,21,
  80,15,192,1,
  64,0,0,1,
  
  95,0,3,245,
  92,0,0,213,
  80,15,192,21,
  80,0,0,21,
  127,0,3,245,
  124,0,0,5,
  64,63,192,0,
  64,0,0,21,
  
  84,0,0,85,
  84,0,5,85,
  80,252,5,85,
  64,0,21,85,
  64,1,85,85,
  0,85,85,85,
  85,85,85,85,
  85,85,85,85,
  
  //map3
  135,//length - 2x2
  32,16,2,4,0,1,
  85,85,85,85,85,85,85,85,
  64,0,0,0,5,84,1,85,
  80,0,85,0,0,80,0,21,
  84,0,21,0,0,16,0,5,
  84,0,7,252,0,0,0,0,
  165,0,0,0,0,0,3,117,
  105,0,0,0,252,15,192,245,
  105,252,0,0,0,0,0,53,
  
  85,0,0,0,1,64,0,21,
  80,0,63,0,5,64,0,21,
  80,0,0,0,21,80,0,5,
  80,0,0,5,85,80,0,5,
  64,0,0,21,85,84,0,1,
  64,21,85,85,85,85,64,5,
  85,90,170,170,170,149,84,21,
  85,89,85,85,85,149,85,85,
  
  //map4
  103,//length - 3x1
  48,8,2,4,0,1,
  85,85,85,85,85,85,85,85,85,85,85,85,
  85,85,0,0,0,5,65,85,84,0,1,85,
  85,64,0,0,0,0,0,85,64,0,0,21,
  80,0,1,85,80,0,0,21,0,0,0,5,
  64,0,5,85,84,0,0,5,0,85,0,1,
  64,1,85,86,148,0,0,1,0,20,0,1,
  0,85,170,170,149,84,0,0,0,0,0,0,
  85,85,149,85,85,85,85,85,85,85,85,85,
  
  //map5
  135,//length - 2x2
  32,16,2,4,0,1,
  100,0,16,0,0,5,85,85,
  100,0,0,0,0,1,65,85,
  100,0,0,0,0,1,0,21,
  100,0,0,0,0,0,0,5,
  100,0,21,84,0,0,0,5,
  101,0,5,85,80,0,1,85,
  101,0,0,85,85,5,85,85,
  165,252,0,0,0,0,85,85,
  
  85,0,0,0,0,0,17,85,
  80,0,63,0,0,0,0,21,
  80,0,0,0,21,80,0,5,
  80,0,0,5,85,80,0,5,
  64,21,64,21,85,84,0,1,
  64,85,85,85,85,85,64,5,
  1,90,170,170,170,149,84,21,
  85,89,85,85,85,149,85,85,
  
  //map6
  199,//length - 3x2
  48,16,2,4,0,1,
  85,85,85,85,85,85,85,85,85,85,85,85,
  85,65,0,1,64,1,85,85,64,0,85,85,
  85,64,0,0,0,0,21,80,0,0,17,85,
  85,0,0,0,0,0,0,64,0,0,0,21,
  85,0,0,0,0,0,0,0,0,0,0,5,
  85,0,0,84,21,64,0,0,0,0,0,0,
  85,64,1,84,5,80,0,0,21,80,255,245,
  69,124,1,80,5,84,0,0,21,64,0,85,
  
  65,124,15,80,1,21,65,84,5,64,0,21,
  64,0,0,64,0,5,0,80,0,64,0,5,
  0,0,0,65,64,0,0,0,0,0,0,1,
  85,67,240,0,0,0,0,0,0,0,0,1,
  85,0,0,0,0,0,0,0,0,0,0,5,
  85,0,0,0,0,0,0,0,85,64,0,5,
  85,255,255,255,255,255,255,213,85,80,1,85,
  170,170,170,170,170,170,170,149,85,85,85,85,
  
  //map7
  135,//length - 4x1
  64,8,2,4,0,1,
  85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
  84,1,64,80,84,21,80,85,68,5,80,5,85,85,85,85,
  80,0,0,64,0,5,64,1,0,1,64,1,80,84,64,85,
  240,0,0,0,0,4,64,0,0,0,64,0,64,16,0,5,
  0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,1,
  255,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  170,95,192,0,0,0,0,0,0,0,0,0,0,85,85,85,
  86,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
  
  //map8
  135,//length - 2x2
  32,16,2,4,0,1,
  85,85,85,85,85,85,85,85,
  64,0,0,0,5,84,1,85,
  80,0,85,0,0,80,0,21,
  84,0,21,0,0,16,0,5,
  84,0,21,85,0,0,0,5,
  87,240,1,85,80,0,0,245,
  85,192,0,21,85,255,192,53,
  85,192,0,0,85,124,0,53, 
   
  85,192,0,0,5,92,3,213,  
  85,192,0,0,1,84,0,21,
  85,192,0,0,0,87,192,5,
  127,192,0,0,0,84,0,15,
  106,192,0,0,0,0,15,0,
  98,255,255,255,255,255,255,255,
  106,170,170,170,170,170,170,170,
  85,85,85,85,85,85,85,85,
  
  //map9
  71,//length 2x1
  32,8,2,4,0,1,
  85,85,85,85,85,85,85,149,
  68,5,80,0,0,85,85,170,
  64,0,0,0,0,20,64,85,
  64,0,0,3,240,0,0,5,
  127,255,255,0,64,0,0,1,
  84,0,0,1,84,0,0,0,
  0,0,0,5,85,64,1,85,
  85,85,85,85,85,85,85,85,//not made yet
  
  //map10
  167,//length 1x5
  16,40,2,4,0,1,85,85,85,85,170,170,170,170,85,85,85,85,64,65,64,21,64,0,0,5,0,0,0,1,84,0,0,0,85,0,3,213,87,192,0,21,84,0,0,26,80,15,192,25,64,0,0,25,64,0,3,217,124,0,0,25,112,15,192,25,64,0,0,25,127,0,3,217,92,0,0,25,80,15,192,25,64,0,0,25,64,0,3,217,0,0,0,25,124,15,192,25,80,0,0,25,80,0,3,217,80,0,0,217,80,15,192,25,80,0,0,25,95,0,3,217,92,0,0,25,80,63,192,25,80,0,0,25,84,0,0,89,84,0,5,89,80,0,5,89,64,0,21,89,0,1,85,89,85,85,85,89,170,170,170,169,85,85,85,85,
  
  //map11
  135,//not made yet
  32,16,2,4,0,1,85,85,85,85,85,85,85,85,170,170,170,170,170,170,170,169,95,255,255,255,255,255,255,249,124,15,255,252,0,0,0,249,112,3,255,240,0,0,0,57,64,0,255,192,252,0,0,57,0,0,63,0,0,0,0,57,92,0,15,0,0,0,0,57,95,192,15,0,0,0,0,57,172,0,15,255,255,240,0,57,108,0,15,255,255,192,255,249,108,255,0,0,0,0,63,249,108,60,0,0,0,3,255,249,111,255,255,255,255,255,255,249,106,170,170,170,170,170,170,169,85,85,85,85,85,85,85,85,
 
  //map12
  103,//length - 3x1
  48,8,2,4,0,1,
  85,85,85,85,85,85,85,85,85,85,85,85,
  85,84,5,85,85,69,80,5,85,80,16,21,
  84,0,1,85,64,1,64,0,80,64,0,5,
  80,0,0,0,0,0,64,0,64,0,0,1,
  80,1,85,85,85,64,0,0,0,0,0,0,
  64,5,85,170,85,80,0,0,0,0,0,85,
  0,21,85,150,85,85,0,0,0,85,85,85,
  85,85,85,150,85,85,85,85,85,85,85,85,
  
  //map13
  103,//length - 1x3
  16,24,2,4,0,1,
  14,213,85,85,
  14,213,85,85,
  14,255,255,253,
  14,192,0,13,
  14,192,0,13,
  14,192,0,13,
  14,192,0,0,
  14,192,15,213,
  
  14,192,0,213,
  14,255,0,213,
  14,192,0,213,
  14,192,15,213,
  14,192,0,245,
  14,255,0,245,
  14,192,0,21,
  14,192,15,84,
  
  14,192,1,85,
  14,255,1,85,
  14,212,15,85,
  14,212,0,21,
  62,213,64,21,
  62,85,80,5,
  126,85,84,0,
  86,85,85,85,
 
  //map14
  103,//length - 3x1
  48,8,2,4,0,1,
  85,64,0,0,21,85,80,0,0,0,0,85,
  85,0,0,0,1,69,80,5,80,0,0,21,
  84,0,0,80,0,1,64,1,64,0,0,5,
  80,0,0,64,0,0,64,0,64,0,0,1,
  80,0,0,0,0,0,0,0,0,0,0,1,
  64,0,0,0,0,0,0,0,0,0,0,1,
  0,0,0,0,0,0,0,0,0,0,0,0,
  85,85,85,85,85,85,85,85,85,85,85,85,
    
  //map15
  135,//length - 2x2
  32,16,2,4,0,1,
  85,85,85,85,85,85,85,85,
  85,85,85,85,64,0,85,85,
  84,0,21,80,0,0,17,85,
  64,0,0,64,0,0,0,21,
  64,0,0,0,0,0,0,5,
  0,0,0,0,0,0,0,5,
  95,245,0,0,21,80,255,245,
  80,5,64,0,17,64,21,85,
  
  64,1,0,84,1,64,1,85,
  64,0,5,80,0,64,1,5,
  64,0,0,0,0,0,0,1,
  64,1,64,0,0,0,0,1,
  80,1,80,0,0,0,0,5,
  85,5,85,85,85,85,85,85,
  85,85,85,85,85,85,85,85,
  85,85,85,85,85,85,85,85,
  
  //map16
  135,//length - 2x2
  32,16,2,4,0,1,
  86,85,85,85,85,86,85,85,
  170,170,170,170,170,170,81,85,
  85,85,85,85,85,85,64,21,
  85,0,0,0,0,16,0,5,
  84,0,0,0,0,0,0,0,
  85,80,63,255,255,255,255,245,
  85,64,0,63,255,255,255,245,
  85,0,0,0,3,255,119,117,
  
  85,252,0,0,0,255,119,85,
  80,0,63,0,0,61,85,85,
  80,0,0,0,0,13,85,85,
  80,255,0,0,0,0,1,21,
  84,60,0,0,0,0,0,21,
  85,85,84,0,0,0,0,85,
  85,85,85,85,85,85,85,89,
  85,85,85,85,85,85,85,85,
  
  //map17
  135,//length - 4x1
  64,8,2,4,0,1,
  85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
  95,253,64,80,84,20,5,85,68,5,80,5,85,85,85,85,
  94,172,0,64,0,0,1,65,0,1,64,1,80,84,64,85,
  94,236,0,0,0,0,0,0,0,0,64,0,64,16,0,5,
  94,175,252,0,0,0,0,0,0,0,0,0,64,0,0,1,
  95,253,113,15,252,0,250,175,0,0,0,0,0,0,0,0,
  85,85,113,64,0,20,59,236,5,85,0,0,0,85,85,85,
  85,85,85,85,85,85,89,101,85,85,85,85,85,85,85,85,
  
  //map18
  199,//length - 3x2
  48,16,2,4,0,1,85,85,85,85,85,85,85,85,85,85,85,85,85,65,0,1,64,1,85,85,64,0,85,85,85,64,0,0,0,0,21,80,0,0,17,85,85,0,0,0,0,0,0,64,0,0,0,21,85,0,0,0,0,0,0,0,0,0,0,5,85,0,0,127,255,253,64,0,0,5,64,5,85,64,1,124,0,13,80,0,21,85,85,85,255,252,1,80,0,1,80,0,21,85,85,85,255,252,15,80,0,1,85,84,5,85,80,21,240,0,0,64,0,13,85,84,0,69,16,5,0,0,0,65,64,1,85,85,0,1,0,1,255,195,240,0,0,5,85,85,64,0,0,1,85,0,0,0,1,85,85,85,80,0,0,0,85,255,255,255,85,85,85,85,85,85,85,85,170,170,170,170,170,170,170,170,170,170,170,170,85,85,85,85,85,85,85,85,85,85,85,85,
  
  //map19
  135,//length - 2x2
  32,16,2,4,0,1,85,85,85,85,85,85,149,87,170,170,170,170,170,170,191,255,111,255,255,255,255,255,240,0,108,0,0,0,0,0,0,63,108,0,0,0,0,0,0,57,108,0,0,0,0,0,0,57,106,0,0,0,0,0,0,170,108,0,0,0,0,0,0,57,108,0,0,63,252,0,0,57,108,0,0,0,0,0,0,57,106,0,0,0,0,0,0,169,108,0,252,0,0,63,0,57,108,0,0,0,0,0,3,57,111,255,255,255,255,255,255,249,170,170,170,170,170,170,170,170,85,85,85,85,85,85,85,85
};

void findMapStart(int id)
{
  mapDataStart = 0;
  while (id != 0)
  {
    mapDataStart += pgm_read_byte(&MapData[mapDataStart]);
    id--;
  }
  mapDataStart = mapDataStart+1;
}

//type,x,y,dir or special,//
//const int8_t ObjectData[1360] PROGMEM = {//16 entities per map - 20 rooms
const int8_t ObjectData[636] PROGMEM = {
   //2,0,20,1,//door,x,y,dir,
   //3,3,18,1,//energy orb,x,y,dir,
   //4,4,18,1,//wall,x,y,dir,
   //5,5,18,1,//energy tank 1,x,y,dir,
   //6,6,18,1,//energy tank2,x,y,dir,
   //7,7,18,1,//key,x,y,dir,
   //8,8,18,1,//Charge Blast,x,y,dir,
   //9,9,18,1,//Plasma Blast,x,y,dir,
   //10,10,18,1,//power suit,x,y,dir,
   //20,13,4,1,//koomer,x,y,dir,
   //21,12,3,1,//herab,x,y,dir,
   //22,5,12,1,//grenjen,x,y,dir,
   
   //map0
   26,//length
   6,//number of objects
   //7,7,18,1,//key,x,y,dir,
   0,0,6,14,//exit,x,y,map,
   2,0,6,1,//door,x,y,dir,
   0,0,20,12,//exit,x,y,map,
   2,0,20,1,//door,x,y,dir,
   1,31,5,15,//exit,x,y,map,
   1,31,21,2,//exit,x,y,map,
   
   //map1
   10,
   2,//number of objects
   0,0,5,6,//exit,x,y,map,
   5,14,4,1,//energy tank 1,x,y,dir,
   
   //map2
   54,
   13,//number of objects
   0,0,5,0,//exit,x,y,map,
   0,0,12,16,//exit,x,y,map,
   2,0,12,1,//door,x,y,dir,
   0,0,28,3,//exit,x,y,map,
   0,0,53,7,//exit,x,y,map,
   1,15,6,4,//exit,x,y,map,
   1,15,26,6,//exit,x,y,map,
   1,15,46,9,//exit,x,y,map,
   21,7,8,1,//herab,x,y,dir,
   21,6,17,1,//herab,x,y,dir,
   21,8,29,1,//herab,x,y,dir,
   21,11,39,1,//herab,x,y,dir,
   21,3,48,1,//herab,x,y,dir,
   
   //map3
   26,
   6,//number of objects
   1,31,4,2,//exit,x,y,map,
   20,5,1,1,//koomer,x,y,dir,
   20,17,1,1,//koomer,x,y,dir,
   20,22,2,1,//koomer,x,y,dir,
   21,16,5,1,//herab,x,y,dir,
   22,5,12,1,//grenjen,x,y,dir,
   
   //map4
   30,
   7,//number of objects
   0,0,6,2,//exit,x,y,map,
   1,47,6,5,//exit,x,y,map,
   20,9,1,1,//koomer,x,y,dir,
   20,25,1,1,//koomer,x,y,dir,
   20,38,5,1,//koomer,x,y,dir,
   21,39,3,1,//herab,x,y,dir,
   23,35,6,1,//krynder,x,y,dir,
   
   //map5
   34,
   8,//number of objects
   0,0,14,4,//exit,x,y,map,
   20,11,6,1,//koomer,x,y,dir,
   20,19,7,1,//koomer,x,y,dir,
   21,14,3,1,//herab,x,y,dir,
   21,12,8,1,//herab,x,y,dir,
   22,26,5,1,//grenjen,x,y,dir,
   10,30,4,1,//power suit,x,y,dir,
   4,30,4,1,//wall,x,y,dir,
   
   //map6
   42,
   10,//number of objects
   0,0,10,2,//exit,x,y,map,
   1,47,5,1,//exit,x,y,map,
   20,8,1,1,//koomer,x,y,dir,
   20,22,1,1,//koomer,x,y,dir,
   20,29,3,1,//koomer,x,y,dir,
   20,37,1,1,//koomer,x,y,dir,
   21,12,4,1,//herab,x,y,dir,
   21,20,4,1,//herab,x,y,dir,
   21,33,5,1,//herab,x,y,dir,
   23,7,13,1,//krynder,x,y,dir,
   
   //map7
   34,
   8,//number of objects
   0,0,4,8,//exit,x,y,map,
   1,63,5,2,//exit,x,y,map,
   20,6,1,1,//koomer,x,y,dir,
   20,26,1,1,//koomer,x,y,dir,
   20,26,1,1,//koomer,x,y,dir,
   20,39,3,1,//koomer,x,y,dir,
   23,15,6,1,//krynder,x,y,dir,
   23,32,6,1,//krynder,x,y,dir,
   
   //map8
   14,
   3,//number of objects
   1,31,12,7,//exit,x,y,map,
   2,31,12,1,//door,x,y,dir,
   24,5,12,1,//koomer king,x,y,dir,
   
   //map9
   26,
   6,//number of objects
   0,0,6,2,//exit,x,y,map,
   1,31,5,10,//exit,x,y,map,
   20,5,1,1,//koomer,x,y,dir,
   20,10,1,1,//koomer,x,y,dir,
   20,23,2,1,//koomer,x,y,dir,
   23,2,3,1,//krynder,x,y,dir,
   
   //map10
   42,
   10,//number of objects
   0,0,5,9,//exit,x,y,map,
   0,0,21,17,//exit,x,y,map,
   2,0,21,1,//door,x,y,dir,
   0,0,36,18,//exit,x,y,map,
   2,0,36,1,//door,x,y,dir,
   1,15,6,11,//exit,x,y,map,
   21,7,13,1,//herab,x,y,dir,
   21,5,21,1,//herab,x,y,dir,
   21,9,25,1,//herab,x,y,dir,
   21,5,31,1,//herab,x,y,dir,
      
   //map11
   38,
   9,//number of objects
   0,0,6,10,//exit,x,y,map,
   21,5,7,1,//herab,x,y,dir,
   21,9,9,1,//herab,x,y,dir,
   21,12,11,1,//herab,x,y,dir,
   21,13,12,1,//herab,x,y,dir,
   21,20,11,1,//herab,x,y,dir,
   21,26,12,1,//herab,x,y,dir,
   22,16,4,1,//grenjen,x,y,dir,
   8,28,8,1,//Charged Blast,x,y,dir,
   
   //map12
   34,
   8,//number of objects
   0,0,6,13,//exit,x,y,map,
   2,0,6,1,//door,x,y,dir,
   1,47,4,0,//exit,x,y,map,
   2,47,4,1,//door,x,y,dir,
   20,9,1,1,//koomer,x,y,dir,
   20,29,1,1,//koomer,x,y,dir,
   20,40,1,1,//koomer,x,y,dir,
   22,24,6,1,//grenjen,x,y,dir,
   
   //map13
   30,
   7,//number of objects
   1,15,6,14,//exit,x,y,map,
   2,15,6,1,//door,x,y,dir,
   1,15,22,12,//exit,x,y,map,
   2,15,22,1,//door,x,y,dir,
   21,13,5,1,//herab,x,y,dir,
   21,10,10,1,//herab,x,y,dir,
   21,6,14,1,//herab,x,y,dir,
   
   //map14
   30,
   7,//number of objects
   0,0,6,13,//exit,x,y,map,
   2,0,6,1,//door,x,y,dir,
   1,47,6,0,//exit,x,y,map,
   2,47,6,1,//door,x,y,dir,
   20,21,1,1,//koomer,x,y,dir,
   23,12,6,1,//krynder,x,y,dir,
   23,32,6,1,//krynder,x,y,dir,
   
   //map15
   30,
   7,//number of objects
   0,0,5,0,//exit,x,y,map,
   20,5,2,1,//koomer,x,y,dir,
   20,13,3,1,//koomer,x,y,dir,
   20,20,1,1,//koomer,x,y,dir,
   22,3,12,1,//grenjen,x,y,dir,
   22,29,12,1,//grenjen,x,y,dir,
   9,30,5,1,//Plasma Blast,x,y,dir,
   
   //map16
   30,
   7,//number of objects
   1,31,4,2,//exit,x,y,map,
   2,31,4,1,//door,x,y,dir,
   21,8,4,1,//herab,x,y,dir,
   21,6,7,1,//herab,x,y,dir,
   20,15,7,1,//koomer,x,y,dir,
   22,11,13,1,//grenjen,x,y,dir,
   22,27,13,1,//grenjen,x,y,dir,
   
   //map17
   38,
   9,//number of objects
   1,63,5,10,//exit,x,y,map,
   2,63,5,1,//door,x,y,dir,
   20,25,1,1,//koomer,x,y,dir,
   20,45,1,1,//koomer,x,y,dir,
   20,55,2,1,//koomer,x,y,dir,
   21,32,4,1,//herab,x,y,dir,
   22,40,6,1,//grenjen,x,y,dir,
   23,8,3,1,//krynder,x,y,dir,
   6,7,3,1,//energy tank2,x,y,dir,
   
   //map18
   42,
   10,//number of objects
   0,0,10,19,//exit,x,y,map,
   2,0,10,1,//door,x,y,dir,
   1,47,12,10,//exit,x,y,map,
   2,47,12,1,//door,x,y,dir,
   20,5,1,1,//koomer,x,y,dir,
   20,21,1,1,//koomer,x,y,dir,
   20,42,8,1,//koomer,x,y,dir,
   21,25,4,1,//herab,x,y,dir,
   22,12,12,1,//grenjen,x,y,dir,
   23,12,4,1,//krynder,x,y,dir,
   
   //map19 
   26,
   6,//number of objects
   1,31,2,18,//exit,x,y,map,
   2,31,2,1,//door,x,y,dir,   
   25,3,6,1,//karame head,x,y,dir,   
   25,3,10,1,//karame head,x,y,dir,   
   25,27,6,-1,//karame head,x,y,dir,   
   25,27,10,-1,//karame head,x,y,dir,   
};

int16_t findObjectStart(int id)
{
  int16_t i = 0;
  while (id != 0)
  {
    i += pgm_read_byte(&ObjectData[i]);
    id--;
  }
  return i+1;
}
const uint16_t PROGMEM  tilesetData[] = {8,8,64, 0, 0, 0, 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1,0x1364,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x1364,0x1364,0x44e3,0x44e3,0x1364,0x41a6,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x41a6,0x41a6,0x41a6,0x44e3,0x1364,0x1364,0x1364,0x1364,0x41a6,0x72a8,0x41a6,0x1364,0x41a6,0x41a6,0x41a6,0x41a6,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x1,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x6227,0x41a6,0x41a6,0x1,0x41a6,0x6227,0x41a6,0x72a8,0x41a6,0x72a8,0x41a6,0x1,0x41a6,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x41a6,0x1,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x6227,0x41a6,0x1,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x1,0x1,0x41a6,0x6227,0x6227,0x41a6,0x1,0x1,0x1,0x1,0x1,0x41a6,0x41a6,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x41a6,0x1,0x1,0x1,0x1,0x1,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x1364,0x44e3,0x44e3,0x44e3,0x1364,0x41a6,0x44e3,0x44e3,0x44e3,0x44e3,0x44e3,0x41a6,0x41a6,0x41a6,0x44e3,0x1364,0x41a6,0x44e3,0x1364,0x41a6,0x72a8,0x41a6,0x1364,0x41a6,0x41a6,0x41a6,0x41a6,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x1,0x41a6,0x41a6,0x41a6,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x6227,0x72a8,0x72a8,0x72a8,0x41a6,0x72a8,0x6227,0x41a6,0x72a8,0x72a8,0x72a8,0x6227,0x41a6,0x6227,0x6227,0x1,0x72a8,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x6227,0x1,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x1,0x1,0x41a6,0x41a6,0x41a6,0x72a8,0x6227,0x41a6,0x1,0x1,0x1,0x1,0x1,0x41a6,0x41a6,0x41a6,0x1,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1,0x1364,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x1364,0x1364,0x44e3,0x44e3,0x1364,0x41a6,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x41a6,0x41a6,0x41a6,0x44e3,0x1364,0x1364,0x1364,0x1364,0x41a6,0x72a8,0x41a6,0x1364,0x41a6,0x41a6,0x41a6,0x41a6,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x1,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x6227,0x41a6,0x41a6,0x1,0x41a6,0x6227,0x41a6,0x72a8,0x41a6,0x72a8,0x41a6,0x1,0x41a6,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x41a6,0x1,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x6227,0x41a6,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x1,0x72a8,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x1,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x1364,0x44e3,0x44e3,0x44e3,0x1364,0x41a6,0x44e3,0x44e3,0x44e3,0x44e3,0x44e3,0x41a6,0x41a6,0x41a6,0x44e3,0x1364,0x41a6,0x44e3,0x1364,0x41a6,0x72a8,0x41a6,0x1364,0x41a6,0x41a6,0x41a6,0x41a6,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x1,0x41a6,0x6227,0x41a6,0x72a8,0x41a6,0x72a8,0x72a8,0x1,0x41a6,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x6227,0x1,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x6227,0x6227,0x41a6,0x6227,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x6227,0x41a6,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1,0x44e3,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x44e3,0x1364,0x1364,0x44e3,0x44e3,0x41a6,0x44e3,0x44e3,0x44e3,0x44e3,0x41a6,0x1364,0x41a6,0x41a6,0x1364,0x44e3,0x44e3,0x44e3,0x41a6,0x41a6,0x72a8,0x41a6,0x1364,0x41a6,0x41a6,0x44e3,0x72a8,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x6227,0x41a6,0x41a6,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x41a6,0x72a8,0x41a6,0x6227,0x41a6,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x41a6,0x6227,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x6227,0x41a6,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x1,0x1,0x41a6,0x6227,0x6227,0x41a6,0x1,0x1,0x1,0x1,0x1,0x41a6,0x41a6,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x44e3,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x1364,0x44e3,0x1364,0x44e3,0x44e3,0x41a6,0x44e3,0x44e3,0x44e3,0x44e3,0x41a6,0x1364,0x41a6,0x41a6,0x1364,0x44e3,0x41a6,0x44e3,0x41a6,0x41a6,0x72a8,0x41a6,0x1364,0x41a6,0x41a6,0x41a6,0x72a8,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x6227,0x6227,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x6227,0x72a8,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x41a6,0x72a8,0x6227,0x41a6,0x41a6,0x41a6,0x1,0x1,0x1,0x41a6,0x41a6,0x41a6,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1,0x44e3,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x44e3,0x1364,0x1364,0x44e3,0x44e3,0x41a6,0x44e3,0x44e3,0x44e3,0x44e3,0x41a6,0x1364,0x41a6,0x41a6,0x1364,0x44e3,0x44e3,0x44e3,0x41a6,0x41a6,0x72a8,0x41a6,0x1364,0x41a6,0x41a6,0x44e3,0x72a8,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x41a6,0x41a6,0x6227,0x41a6,0x72a8,0x41a6,0x72a8,0x41a6,0x1,0x41a6,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x41a6,0x1,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x6227,0x41a6,0x1,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x6227,0x41a6,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x1364,0x44e3,0x44e3,0x44e3,0x44e3,0x1364,0x44e3,0x1364,0x44e3,0x1364,0x44e3,0x44e3,0x41a6,0x44e3,0x44e3,0x44e3,0x44e3,0x41a6,0x1364,0x41a6,0x41a6,0x1364,0x44e3,0x41a6,0x44e3,0x41a6,0x41a6,0x72a8,0x41a6,0x1364,0x41a6,0x41a6,0x41a6,0x72a8,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x6227,0x41a6,0x6227,0x41a6,0x72a8,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x6227,0x6227,0x41a6,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x41a6,0x6227,0x72a8,0x41a6,0x6227,0x6227,0x41a6,0x72a8,0x72a8,0x41a6,0x72a8,0x72a8,0x41a6,0x41a6,0x72a8,0x72a8,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x72a8,0x6227,0x6227,0x41a6,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x1,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x1,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x823,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x19f0,0x19f0,0x1,0x1,0x1,0x19f0,0x1,0x19f0,0x19f0,0x1,0x19f0,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0x1,0x1,0x1,0x1,0x19f0,0x19f0,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x1,0x7c52,0x4249,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x1,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1,0x2b90,0x1,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1,0x1,0x1,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1,0x1,0x1,0x1,0x1,0x2b90,0x1a8c,0x2b90,0x1,0x1,0x1,0x1,0x1,0x1,0x2b90,0x2b90,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1,0x2b90,0x1a8c,0x0,0x0,0x0,0x2b90,0x2b90,0x1,0x1,0x1a8c,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1,0x1,0x1,0x2b90,0x1a8c,0x1,0x0,0x2b90,0x1,0x1,0x1,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1,0x1,0x1,0x1,0x1,0x2b90,0x1a8c,0x2b90,0x1,0x1,0x1,0x1,0x1,0x1,0x2b90,0x2b90,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x2b90,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x4249,0x7c52,0x1,0x1a8c,0x1,0x2b90,0x1,0x1,0x2b90,0x1a8c,0x1,0x1a8c,0x1,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x1,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x1,0x1,0x1a8c,0x1a8c,0x1,0x1,0x1,0x1,0x1,0x1,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x1a8c,0x0,0x0,0x0,0x2b90,0x1,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1a8c,0x1,0x1,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x1,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x1,0x1,0x1a8c,0x1a8c,0x1,0x1,0x1,0x1,0x1,0x1,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0xa63a,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x4249,0x7c52,0x7c52,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x2b90,0x1a8c,0x1,0x1,0x1a8c,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x1,0x2b90,0x1a8c,0x2b90,0x1a8c,0x2b90,0x1a8c,0x1,0x1,0x1,0x2b90,0x2b90,0x1a8c,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90,0x2b90};
Image tiles_plus_mask = Image(tilesetData);

//const uint16_t PROGMEM  tiles_plus_mask_im[] = {8,8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x0,0x726,0x726,0x0,0x726,0x726,0x0,0xaa86,0x0,0x726,0x0,0x0,0x726,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0xaa86,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0xaa86,0x0,0x0,0x0,0x0,0x0,0xaa86,0x0,0xaa86,0x0,0x0,0x0,0x0,0x0,0x0,0xaa86,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x0,0x726,0x726,0x0,0x726,0x726,0x0,0xaa86,0x0,0x726,0x0,0xaa86,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x726,0xaa86,0x0,0x0,0x726,0x726,0xaa86,0x726,0x726,0xaa86,0x0,0x0,0x726,0x0,0xaa86,0x726,0xaa86,0xaa86,0x0,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x726,0xaa86,0x0,0x0,0x726,0x726,0x0,0x726,0x726,0xaa86,0x0,0x0,0x726,0x0,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x0,0x726,0x0,0x0,0x726,0x726,0x0,0x726,0xaa86,0x0,0xaa86,0x0,0x726,0x0,0x0,0x726,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0x0,0x0,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0xaa86,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x0,0x726,0x0,0x0,0x726,0x726,0x0,0x726,0xaa86,0x0,0xaa86,0x0,0x726,0x0,0xaa86,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0x0,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x0,0x726,0x0,0x0,0x726,0x726,0x726,0x726,0xaa86,0x0,0xaa86,0x0,0x726,0x0,0xaa86,0x726,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x0,0x726,0x726,0x726,0x726,0x0,0x726,0x0,0x0,0x726,0x726,0x0,0x726,0xaa86,0x0,0xaa86,0x0,0x726,0x0,0xaa86,0x0,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0x0,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0x0,0x0,0x0,0x0,0xaa86,0x0,0xaa86,0xaa86,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x0,0xaa86,0xaa86,0xaa86,0xaa86,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x194a,0x0,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x0,0x194a,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x0,0x194a,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x194a,0x0,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x194a,0x0,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x194a,0x0,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x194a,0x194a,0x194a,0x194a,0x0,0x0,0x0,0x194a,0x0,0x194a,0x194a,0x0,0x194a,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x194a,0x194a,0x0,0x0,0x0,0x0,0x194a,0x194a,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x0,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x2d7f,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2d7f,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x0,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x2d7f,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2d7f,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x0,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x0,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0xc618,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x0,0x0,0x2d7f,0x0,0x0,0x0,0x2d7f,0x2d7f,0x0,0x0,0x0,0x2d7f,0x0,0x0,0x2d7f,0x2d7f,0x0,0x2d7f,0x0,0x0,0x2d7f,0x0,0x2d7f,0x2d7f,0x2d7f,0x0,0x0,0x0,0x0,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f,0x2d7f};
//Image tiles_plus_mask = Image(tiles_plus_mask_im, ColorMode::rgb565,64);

int16_t counter=0;
uint32_t game_timer=0;

void setup() {  
  Serial.begin(115200);
  gb.begin();   
  gb.setFrameRate(30);
  gameState  = STATE_MENU_INTRO;
}

const char PROGMEM story_text_0_L1[] = "PLANET TURNAX";
const char PROGMEM story_text_0_L2[] = "HAS EXTENSIVE";
const char PROGMEM story_text_0_L3[] = "MINERAL DEPOSITS";

const char PROGMEM story_text_1_L1[] = "OF HIGH VALUE TO";
const char PROGMEM story_text_1_L2[] = "(IPAC).";
const char PROGMEM story_text_1_L3[] = "";

const char PROGMEM story_text_2_L1[] = "RECENT ATTACKS BY";
const char PROGMEM story_text_2_L2[] = "PRIMATIVE SPECIES";
const char PROGMEM story_text_2_L3[] = "HAVE PROVEN";

const char PROGMEM story_text_3_L1[] = "DAMAGING TO MINING";
const char PROGMEM story_text_3_L2[] = "OPERATIONS.";
const char PROGMEM story_text_3_L3[] = "";

const char PROGMEM story_text_4_L1[] = "YOUR MISSION IS";
const char PROGMEM story_text_4_L2[] = "TO ELIMINATE THE";
const char PROGMEM story_text_4_L3[] = "PRIMITIVE SPECIES";
int section;
int x;
int y;
int lspeed;

//rect hit rect
bool collide(Rect rect1, Rect rect2)
{
  return !(rect2.x                >= rect1.x + rect1.width  ||
           rect2.x + rect2.width  <= rect1.x                ||
           rect2.y                >= rect1.y + rect1.height ||
           rect2.y + rect2.height <= rect1.y);
}
int8_t title_track = -1;

//credits
const char PROGMEM credits0[] = "";
const char PROGMEM credits1[] = "THANKS FOR PLAYING";
const char PROGMEM credits2[] = "OMEGA HORIZON";
const char PROGMEM credits3[] = "DESIGN";
const char PROGMEM credits4[] = "KURONOWACHAN";
const char PROGMEM credits5[] = "CODE";
const char PROGMEM credits6[] = "SHDWWZRD";
const char PROGMEM credits7[] = "ART";
const char PROGMEM credits8[] = "STUDIOCRAFT";
const char PROGMEM credits9[] = "TESTERS";
const char PROGMEM credits10[] = "CRIS";
const char PROGMEM credits11[] = "MORE GAMES AT";
const char PROGMEM credits12[] = "NEORETRO.GAMES";
const char PROGMEM credits13[] = "PLEASE SUPPORT US";
const char PROGMEM credits14[] = "PATREON.COM/NEORETRO";
const char PROGMEM *credits[] = {
  credits1,
  credits2,
  credits0,
  credits3,
  credits4,
  credits0,
  credits5,
  credits6,
  credits0,
  credits7,
  credits6,
  credits8,
  credits0,
  credits9,
  credits10,
  credits0,
  credits11,
  credits12,
  credits0,
  credits13,
  credits14
};
int y_offset=0;

void loop() {
  // put your main code here, to run repeatedly:
  if(!gb.update()) return;
  milli = micros();
  char mychar;
  char buf[5];
  char lbuf[18];
  int i;
  gb.display.clear();
  switch(gameState){    
    case STATE_MENU_INTRO:
      gb.display.drawImage(8,0,neo_retro_logo);
      counter++;
      if(counter>90){
        //title_track=gb.sound.play("Omega_Horizon_Title.wav",true);
        counter=0;
        gameState = STATE_TITLE_SCREEN; 
        Raining=true;
        initRainDrops();
      }
      break;
    case STATE_TITLE_SCREEN:
      drawRainDrops(); 
      //show logo image and "PUSH A TO START"
      gb.display.drawImage(20, 0, logo_plus_mask);
      //VERSION NUMBER      
      gb.display.setCursor(64,0);
      gb.display.print(PSTR(VERSION));
      if (gb.buttons.pressed(BUTTON_A)){
        //gb.sound.stop(title_track); 
        counter=0;
        x=0;
        y=49;
        section=0;
        lspeed=1;
        gameState = STATE_STORY_SCREEN; 
      }
      break;
    case STATE_STORY_SCREEN:  
      counter+=1;
      if (gb.buttons.pressed(BUTTON_A) || gb.buttons.pressed(BUTTON_B) || counter>=300){  
        if(section<4){
           section++;
           counter=0;
        }else{
          game_timer=0;
          counter=0;
          gameState=STATE_PLANET_SCREEN;
          player.point.x=0;
          player.point.y=32*8;
          //gb.sound.play("ship_landing.wav");
        }
      }
            
      gb.display.drawImage(48,8,planet_plus_mask);
      if(section==0){
        gb.display.setCursor(0,47);
        gb.display.print(story_text_0_L1);
        gb.display.setCursor(0,53);
        gb.display.print(story_text_0_L2);
        gb.display.setCursor(0,59);
        gb.display.print(story_text_0_L3);
      }else if(section==1){
        gb.display.setCursor(0,47);
        gb.display.print(story_text_1_L1);
        gb.display.setCursor(0,53);
        gb.display.print(story_text_1_L2);
        gb.display.setCursor(0,59);
        gb.display.print(story_text_1_L3);
      }else if(section==2){
        gb.display.setCursor(0,47);
        gb.display.print(story_text_2_L1);
        gb.display.setCursor(0,53);
        gb.display.print(story_text_2_L2);
        gb.display.setCursor(0,59);
        gb.display.print(story_text_2_L3);
      }else if(section==3){
        gb.display.setCursor(0,47);
        gb.display.print(story_text_3_L1);
        gb.display.setCursor(0,53);
        gb.display.print(story_text_3_L2);
        gb.display.setCursor(0,59);
        gb.display.print(story_text_3_L3);
      }else if(section==4){
        gb.display.setCursor(0,47);
        gb.display.print(story_text_4_L1);
        gb.display.setCursor(0,53);
        gb.display.print(story_text_4_L2);
        gb.display.setCursor(0,59);
        gb.display.print(story_text_4_L3);
      }
      gb.display.setCursor(80-counter%5,59);
      gb.display.print(PSTR(">"));
      //draw story on the screen     
      break; 
    case STATE_PLANET_SCREEN:
      counter++;
      if(counter>150){
        counter=0;
        player.point.x=1088;//17
        player.point.y=1088;//17
        player.damageTime=0;
        player.map_id = 0;
        player.prev_map_id = 0;
        player.JUMP=0;
        player.VSPEED=0;
        player.YSPEED=0;
        player.JUMPHEIGHT=40;
        player.PSPEED = 16;
        player.LIFE=100;
        player.MAXLIFE=100;
        player.POWER=1;
        player.RUN=false;
        player.KEY=false;
        player.POWERSUIT=false;
        player.FACELEFT=false;
        player.FLASH=false;
        player.FIRE=0; 
        player.frame;
        player.cooldown=0;
        UNIQUES=0b11111111;
        karame_heads=4;
        LoadRoom();
        gameState=STATE_GAME_PLAYING;
      }
      gb.display.drawImage(48,8,planet_plus_mask);
      if((player.point.x>>3)<=16){
        player.point.x+=12;
        player.point.y-=6;
        omegaone_plus_mask.setFrame(player.frame);
        gb.display.drawImage((player.point.x>>3),(player.point.y>>3),omegaone_plus_mask);
      }else if((player.point.x>>3)<=32){
        player.frame=1;
        player.point.x+=8;
        player.point.y-=4;
        omegaone_plus_mask.setFrame(player.frame);
        gb.display.drawImage((player.point.x>>3),(player.point.y>>3),omegaone_plus_mask);
      }else if((player.point.x>>3)<=58){
        player.frame=2;
        player.point.x+=4;
        player.point.y-=0;
        omegaone_plus_mask.setFrame(player.frame);
        gb.display.drawImage((player.point.x>>3),(player.point.y>>3),omegaone_plus_mask);
      } 
      //animation of OmegaOne landing on Planet Turnax
      gb.display.setCursor(16,56);
      gb.display.print(PSTR("PLANET TURNAX"));
      break;
    case STATE_GAME_PLAYING:
      if(game_timer<4294967295){game_timer++;}
      drawGame();
      break;
    case STATE_GAME_OVER:  
      if (gb.buttons.pressed(BUTTON_A) || gb.buttons.pressed(BUTTON_B)){
        counter=0;
        gameState = STATE_TITLE_SCREEN; 
      }    
      gb.display.setCursor(0,24);
      gb.display.print(PSTR("GAME OVER"));
      break;      
    case STATE_MISSION_COMPLETE:
      if(counter<300){counter++;}
      if(counter>=300){  
        if (gb.buttons.pressed(BUTTON_A) || gb.buttons.pressed(BUTTON_B)){
          counter=0;
          gameState = STATE_TITLE_SCREEN; 
        } 
      }
      gb.display.setCursor(8,8);
      gb.display.print(PSTR("MISSION COMPLETE"));
      gb.display.setCursor(0,32);
      gb.display.print(PSTR("ELIMINATED PRIMITIVE"));
      gb.display.setCursor(16,39);
      gb.display.print(PSTR("HIERARCHY IN"));
      //add time to complete the mission
      int seconds = (game_timer/60)%60 ;
      int minutes = game_timer/3600;
      itoa(minutes, buf, 10);
      gb.display.setCursor(7,46);
      gb.display.print(buf);
      gb.display.setCursor(22,46);
      gb.display.print(PSTR("mins"));
      itoa(seconds, buf, 10);
      gb.display.setCursor(46,46);
      gb.display.print(buf);
      gb.display.setCursor(61,46);
      gb.display.print(PSTR("secs"));
      break;
  }
  frameCount++;  
}

void initRainDrops(){
  //create X coord
  for(int a=0;a<TotalRainDrops;a++){
    raindrops[a].x = random(SCREEN_WIDTH);
    raindrops[a].y = random(SCREEN_HEIGHT);
  }
}

void drawRainDrops(){
  for(int a=0;a<TotalRainDrops;a++){
    //move down
    raindrops[a].y+=8;
    if((raindrops[a].y)>SCREEN_HEIGHT){
      raindrops[a].x = random(SCREEN_WIDTH);
      raindrops[a].y = 0;
    }
    //maybe move side to side
    int rnd=random(8);
    if(rnd==1){//move left
      raindrops[a].x-=2;
      if(raindrops[a].x<0){raindrops[a].x+=2;}
    }
    if(raindrops[a].y+2<=h){
      gb.display.drawLine(raindrops[a].x,raindrops[a].y,raindrops[a].x,raindrops[a].y+2);
    }
    //check for collision with ground
    /*if(!Place_Free(raindrops[a].x,raindrops[a].y)){
      raindrops[a].x = random(SCREEN_WIDTH);
      raindrops[a].y = 0;
      //maybe make a splash when it hits the ground
    }*/
  }
}

void drawGame() {
  //drawSnowFlakes();
  if(Raining){
    drawRainDrops();
  }
  
  DrawMap(player.point.x>>3,player.point.y>>3,player.map_id);    
  
  playerTick();
  tickProjectiles();
  tickEntities();
  drawProjectiles();
  drawEntities();
  drawPlayer();

  gb.display.drawImage(0,0,HUD_plus_mask);
  gb.display.setCursor(0,0);
  gb.display.print(player.LIFE);
  
  //gb.display.setCursor(0,59);
  //gb.display.print(gb.getCpuLoad());

}








void playerTick(){ 
  if(player.damageTime>0){
    player.damageTime-=1;
  }
  if (gb.buttons.repeat(BUTTON_LEFT,0)){ player.RUN=true;player.FACELEFT=true;}
  if (gb.buttons.repeat(BUTTON_RIGHT,0)){ player.RUN=true;player.FACELEFT=false;}
  if (gb.buttons.repeat(BUTTON_A,1)){ if(player.FIRE==0){player.FIRE=1;}}//shoot
  if (gb.buttons.pressed(BUTTON_B)){ 
    if(player.JUMP==0){
      player.JUMP=1;
    }else if(player.JUMP==2 && isEnemyCollision(player.point.x>>3,(player.point.y>>3)+4)){
      player.YSPEED=-player.JUMPHEIGHT;
      if(player.FACELEFT){
        player.frame=3;
      }else{
        player.frame=7;
      }
    } 
  }
  if(!gb.buttons.repeat(BUTTON_RIGHT,0) && !gb.buttons.repeat(BUTTON_LEFT,0)){
    player.RUN=false;
    if(player.JUMP==0){
      if(player.FACELEFT){
        player.frame=0;
      }else{
        player.frame=4;
      }
    }
  }
  if( (player.JUMP==1 && (!Place_Free(player.point.x>>3,(player.point.y>>3)+2) || isSolidEntityCollision(player.point.x>>3,(player.point.y>>3)+2) ) ) ){
    player.JUMP=2;
    player.YSPEED=-player.JUMPHEIGHT;
    if(player.FACELEFT){
      player.frame=3;
    }else{
      player.frame=7;
    }
  }
  
  player.VSPEED=player.YSPEED;
  if(player.VSPEED>0){
    do{
      if(Place_Free(player.point.x>>3,(player.point.y+player.VSPEED)>>3) && !isSolidEntityCollision(player.point.x>>3,(player.point.y+player.VSPEED)>>3) ){
        player.point.y+=player.VSPEED;
        player.YSPEED+=GRAVITY;
        if(player.YSPEED>32){player.YSPEED=32;}
          player.VSPEED=0;
        }else{
          if(player.VSPEED>1){
           player.VSPEED--;
          }else{
           player.YSPEED=0;
           player.VSPEED=0;
           player.JUMP=0;
          }
        }
      }while(player.VSPEED>0);
    }else{
      do{
        if(Place_Free(player.point.x>>3,(player.point.y+player.VSPEED)>>3) && !isSolidEntityCollision(player.point.x>>3,(player.point.y+player.VSPEED)>>3) ){
          player.point.y+=player.VSPEED;
          player.YSPEED+=GRAVITY;
          player.VSPEED=0;
        }else{
         if(player.VSPEED<-1){
          player.VSPEED++;
         }else{
           player.YSPEED=0;
           player.VSPEED=0;
           player.JUMP=0;
         }
       }
     }while(player.VSPEED<0);
   }

   if(player.RUN){
    if(player.JUMP!=2){
      if(everyXFrames(2)){
        if(player.FACELEFT){
          player.frame+=1;
          if(player.frame>2){player.frame=0;}
        }else{
          player.frame+=1;
          if(player.frame>6){player.frame=4;}
          if(player.frame<4){player.frame=4;}
        }
      }
    }
     if(player.FACELEFT){
       if(Place_Free((player.point.x-player.PSPEED)>>3,player.point.y>>3) && !isSolidEntityCollision((player.point.x-player.PSPEED)>>3,player.point.y>>3) ){
         player.point.x-=player.PSPEED;
       }
     }else{
      if(Place_Free((player.point.x+player.PSPEED)>>3,player.point.y>>3) && !isSolidEntityCollision((player.point.x+player.PSPEED)>>3,player.point.y>>3)){
        player.point.x+=player.PSPEED;
      }  
     }
   }

   //entity collsison
   isEntityCollision();

   //fire weapons  
    player.cooldown--;
    if(player.FIRE==2 && player.cooldown<=0){      
      player.FIRE=0;  
    }
    if(player.FIRE==1){
      //gb.sound.play("sfx_wpn_laser2.wav");
      gb.sound.tone(200,30);
      player.cooldown=10;
      int16_t newX=0;int16_t newY=0;
      if(!player.FACELEFT){
        newX=(player.point.x>>3);newY=(player.point.y>>3)-1;
      }else{
        newX=(player.point.x>>3);newY=(player.point.y>>3)-1;
      }
      createMyProjectile(newX,newY,player.FACELEFT,player.POWER);
      player.FIRE=2;             
    }
}

bool Place_Free(int16_t TempX, int16_t TempY){
  //set bound box
  Rect rect = {.x = TempX+2, .y = TempY+1, .width = 4, .height = 7};  
  return isPlaceFree(rect,TempX,TempY);
}

bool isPlaceFree(Rect rect, int16_t TX, int16_t TY){
  //verify there are no tiles or objects blocking the location the target wants to move into
  int8_t MX=floor(TX/8);
  int8_t MY=floor(TY/8);
  for(int8_t tempX=MX; tempX<MX+2; tempX++){
    for(int8_t tempY=MY; tempY<MY+4; tempY++){
      int8_t Tile=TileCollision(rect,tempX,tempY,player.map_id);
      if(Tile>=1){return false;}
    }
  }
  return true;
}

void takeDamage(int8_t Dam){
  player.JUMP=2;
  player.YSPEED=-20;
  if(player.damageTime<=0){
    if(player.POWERSUIT){//dam-=1;
      Dam-=1;
    }
    if(player.LIFE>Dam){
      player.FLASH=true;
      player.LIFE-=Dam;
      player.damageTime = PLAYER_DAMAGE_TIME;
    }else{
      gameState=STATE_GAME_OVER;
    }
  }
}

bool isSolidEntityCollision(int16_t TempX, int16_t TempY){
  Rect player_rect = {.x = TempX+2, .y = TempY+1, .width = 6, .height = 7};  
  //check entities
  for(int8_t i=0;i<TotalEntities;i++){
    if(entities[i].Exists==true){
      Rect entityRect = getEntityRect(i);
      if(collide(entityRect,player_rect)){
        if(entities[i].Type==2 && entities[i].FLASH==false){//door 
          return true;
        }else if(entities[i].Type==4){//destructible wall
          return true;
          //player can not pass through if door is visible
        }
      }
    }
  } 
  return false;
}

bool isEnemyCollision(int16_t TempX, int16_t TempY){
  Rect player_rect = {.x = TempX+2, .y = TempY+1, .width = 6, .height = 7};  
  //check entities
  for(int8_t i=0;i<TotalEntities;i++){
    if(entities[i].Exists==true){
      Rect entityRect = getEntityRect(i);
      if(collide(entityRect,player_rect)){
        if(entities[i].Type>=20){ 
          return true;
        }
      }
    }
  } 
  return false;
}

  
void isEntityCollision(){
  //set bound box
  Rect rect = {.x=(player.point.x>>3)+2, .y=(player.point.y>>3)+1, .width=6, .height=7};
    
  //check entities
  for(int8_t i=0;i<TotalEntities;i++){
    if(entities[i].Exists==true){
      Rect entityRect = getEntityRect(i);
      if(collide(entityRect,rect)){
        if(entities[i].Type<=1){//exits
          //and player is outside of the map
          if(rect.x<0 || rect.y<0 or rect.x+rect.width>WorldWidth(player.map_id) || rect.y+rect.height>WorldHeight(player.map_id)){     
            //set and load the next map 
            //find exit on new map that links to prev map id
            int16_t objStart = findObjectStart(entities[i].id);
            byte num_of_entites_and_objects = pgm_read_byte(&ObjectData[objStart+0]);
            for(byte t=0; t<num_of_entites_and_objects;t++){  
              //for each objects see if it is an exit with next map id = prev map id
              if(pgm_read_byte(&ObjectData[objStart+t*4+1])<=1 && pgm_read_byte(&ObjectData[objStart+t*4+4])==player.map_id){ 
                player.prev_map_id = player.map_id;
                player.map_id = entities[i].id;
                player.point.x=(pgm_read_byte(&ObjectData[objStart+t*4+2])*8)<<3;
                player.point.y=(pgm_read_byte(&ObjectData[objStart+t*4+3])*8)<<3;
                LoadRoom();
                //set camera on player
                WinX = (player.point.x>>3)-68;
                WinY = (player.point.y>>3)-36; 
              }
            }
          }
        }else if(entities[i].Type==2){//door 
        }else if(entities[i].Type==3){//orb
          gb.sound.tone(500,100);  
          entities[i].Exists=false;
          player.LIFE+=5; 
          if(player.LIFE>player.MAXLIFE){player.LIFE=player.MAXLIFE;}
        }else if(entities[i].Type==4){//destructible wall
          //player can not pass through if door is visible
          //entities[i].Exists=false;
          //player.LIFE+=5; 
          //if(player.LIFE>player.MAXLIFE){player.LIFE=player.MAXLIFE;}
        }else if(entities[i].Type==5){//energy tank 1
          gb.sound.tone(500,100);  
          entities[i].Exists=false;
          bitWrite(UNIQUES,0,0);
          player.LIFE+=100; 
          player.MAXLIFE+=100;
        }else if(entities[i].Type==6){//energy tank 2
          gb.sound.tone(500,100);  
          entities[i].Exists=false;
          bitWrite(UNIQUES,1,0);
          player.LIFE+=100; 
          player.MAXLIFE+=100;
        }else if(entities[i].Type==7){//key
          gb.sound.tone(500,100);  
          entities[i].Exists=false;
          bitWrite(UNIQUES,2,0);
          player.KEY=true;
        }else if(entities[i].Type==8){//Energy Blast-unique-dam=3
          gb.sound.tone(500,100);  
          entities[i].Exists=false;
          bitWrite(UNIQUES,3,0);
          player.POWER=3;
        }else if(entities[i].Type==9){//Plasma Beam-unique-dam=5
          gb.sound.tone(500,100);  
          entities[i].Exists=false;
          bitWrite(UNIQUES,4,0);
          player.POWER=5;
        }else if(entities[i].Type==10){//Power Suit-25% damage reduction
          gb.sound.tone(500,100);  
          entities[i].Exists=false;
          bitWrite(UNIQUES,5,0);
          player.POWERSUIT=true;
        }else if(entities[i].Type==20){//koomer  
          gb.sound.tone(200,50);           
          takeDamage(2);
        }else if(entities[i].Type==21){//herab
          gb.sound.tone(200,50);   
          takeDamage(3);
        }else if(entities[i].Type==22){//grejen
          gb.sound.tone(200,50);   
          takeDamage(4);
        }else if(entities[i].Type==23){//krynder
          gb.sound.tone(200,50);   
          takeDamage(5);
        }else if(entities[i].Type==24){//koomer king
          gb.sound.tone(200,50);   
          takeDamage(8);
        }else if(entities[i].Type==25){//karame
          gb.sound.tone(200,50);   
          takeDamage(0);
        }else if(entities[i].Type==26){//karame energy blast
          gb.sound.tone(200,50);   
          takeDamage(5);
        }            
      }
    }
  } 
}

void drawPlayer(){
  if(player.damageTime>0){
    player.FLASH=!player.FLASH;
  }else{
    player.FLASH=false;
  }
  if (!player.FLASH){ 
    omega_plus_mask.setFrame(player.frame);
    gb.display.drawImage((player.point.x>>3)-WinX, (player.point.y>>3)-WinY, omega_plus_mask);
  }
  //player.FLASH=false;
}





void createMyProjectile(int16_t X, int16_t Y, bool Dir, int8_t power){
  for (int8_t i = 0; i < TotalMyProjectiles; i++){
    if (myprojectiles[i].Exists == false){
      myprojectiles[i].rect.x=X;
      myprojectiles[i].rect.y=Y;
      if(Dir){//go left
        myprojectiles[i].dir_left=true;
      }else{
        myprojectiles[i].dir_left=false;
      }
      myprojectiles[i].Exists=true;
      myprojectiles[i].POWER=power;
      myprojectiles[i].PSPEED=8;//4;
      
      break;
    }
  }
}

void tickProjectiles(){
  for (int8_t i = 0; i < TotalMyProjectiles; i++){
    if (myprojectiles[i].Exists == true){
      //move the bullet
      if(myprojectiles[i].dir_left){
          myprojectiles[i].rect.x-=myprojectiles[i].PSPEED;
      }else{
          myprojectiles[i].rect.x+=myprojectiles[i].PSPEED;
      }     
      myprojectileCollision(i);
    }
  }
};

void drawProjectiles(){
  for (int8_t i = 0; i < TotalMyProjectiles; i++){
    if (myprojectiles[i].Exists == true){  
      if(player.POWER==1){
        bullets_plus_mask.setFrame(0);
        gb.display.drawImage(myprojectiles[i].rect.x-WinX, myprojectiles[i].rect.y-WinY, bullets_plus_mask);        
      }else if(player.POWER==3){
        bullets_plus_mask.setFrame(1);
        gb.display.drawImage(myprojectiles[i].rect.x-WinX, myprojectiles[i].rect.y-WinY, bullets_plus_mask);        
      }else if(player.POWER==5){
        bullets_plus_mask.setFrame(2);
        gb.display.drawImage(myprojectiles[i].rect.x-WinX, myprojectiles[i].rect.y-WinY, bullets_plus_mask);        
      }
    }
  } 
};

void myprojectileCollision(int8_t i){
  //set bound box
  Rect rect = {.x=myprojectiles[i].rect.x+2, .y = myprojectiles[i].rect.y+2, 4, 4};  
  //check Enemies
  for(int8_t t=0;t<TotalEntities;t++){
    if(entities[t].Exists){
      Rect entityRect = getEntityRect(t);
      if(collide(entityRect,rect)){
        if(entities[t].Type==2){//door
          //if player has the key then the door is destroyed
          if(player.KEY){
            entityTakeDamage(t,myprojectiles[i].POWER);
            myprojectiles[i].Exists=false;
          }
        }else if(entities[t].Type==4){//destructible wall
          if(player.POWER>=3){
            entityTakeDamage(t,myprojectiles[i].POWER);
            myprojectiles[i].Exists=false;
          }
        }else if(entities[t].Type>19 && entities[t].Type<26){//monster
          entityTakeDamage(t,myprojectiles[i].POWER);
          myprojectiles[i].Exists=false;
        }
      }
    }
  }
  //check tiles
  if(!isPlaceFree(rect,myprojectiles[i].rect.x,myprojectiles[i].rect.y)){
    myprojectiles[i].Exists=false;
  }
  //check for boundry
  if(myprojectiles[i].rect.x<0){myprojectiles[i].Exists=false;}
  if(myprojectiles[i].rect.x>WorldWidth(player.map_id)){myprojectiles[i].Exists=false;}  
};






void LoadRoom(){
  //clear all projectiles,entities then initialize the room
  for (int8_t i = 0; i < TotalEntities; i++){
    entities[i].Exists=false;
  }
  for (int8_t i = 0; i < TotalMyProjectiles; i++){
    myprojectiles[i].Exists=false;
  }
  int16_t objStart = findObjectStart(player.map_id);
  byte num_of_entites_and_objects = pgm_read_byte(&ObjectData[objStart+0]);
  for(byte i=0; i<num_of_entites_and_objects;i++){  
    //make sure unique exists if it is - 00001111  health upgrade, weapon upgrade, koomer king, karame
    bool ct=true;
    switch( pgm_read_byte(&ObjectData[objStart+i*4+1]) ){
      case 5://energy tank 1
        ct = (bitRead(UNIQUES,0))==1 ? true : false;
        break;
      case 6://energy tank 2
        ct = (bitRead(UNIQUES,1))==1 ? true : false;
        break;
      case 7://key
        ct = (bitRead(UNIQUES,2))==1 ? true : false;
        break;
      case 8://weapon upgrade 1
        ct = (bitRead(UNIQUES,3))==1 ? true : false;
        break;
      case 9://weapon upgrade 2
        ct = (bitRead(UNIQUES,4))==1 ? true : false;
        break;
      case 10://power suit
        ct = (bitRead(UNIQUES,5))==1 ? true : false;
        break;
      case 24://koomer king
        ct = (bitRead(UNIQUES,6))==1 ? true : false;
        break;
      case 25://Karame
        ct = (bitRead(UNIQUES,7))==1 ? true : false;
        break;
    }
    if(ct){
      createEntity(
        pgm_read_byte(&ObjectData[objStart+i*4+1]),
        pgm_read_byte(&ObjectData[objStart+i*4+2])*8,
        pgm_read_byte(&ObjectData[objStart+i*4+3])*8,
        pgm_read_byte(&ObjectData[objStart+i*4+4])
      ); 
    }
  }
  //initSnowFlakes();
  if(player.map_id==0 || player.map_id==14 || player.map_id==5){
    Raining=true;
    initRainDrops();
  }else{
    Raining=false;
  }
  findMapStart(player.map_id);
}







/*
  0:east exit
  1:west exit
  2:north exit
  3:south exit
  4-nirth/east/south/west door
  5=Energy Max Booster
  6=Increased Energy Recharge Rate
  7=key
  8=energy orb
*/

void createEntity(int8_t Type, int16_t X, int16_t Y, byte special){
  for (int8_t i = 0; i < TotalEntities; i++){
    if (!entities[i].Exists){
      entities[i].id=special;               
      entities[i].point.x=X;
      entities[i].point.y=Y;
      entities[i].Type=Type;
      entities[i].Direct=special;
      entities[i].Exists=true;
      entities[i].FLASH=false;
      entities[i].yspeed=0;
      entities[i].animation=0;
      entities[i].frame=0;
      if(Type==2){//door
        if(entities[i].point.x==0){
          entities[i].frame=1;
        }else{
          entities[i].frame=3;
        }
        entities[i].FLASH=true;
      }else if(Type==20){//slime
        entities[i].life=3;
      }else if(Type==21){//herab
        entities[i].life=5;
      }else if(Type==22){//grejen
        entities[i].life=8;
      }else if(Type==23){//krynder
        entities[i].life=10;
      }else if(Type==24){//koomer king
        entities[i].animation=KOOMER_KING_MOVING;
        entities[i].life=30;
      }else if(Type==25){//karame
        karame_heads=4;
        entities[i].life=100;
      }else if(Type==26){//karame energy blast
        entities[i].life=1;
        //determine path to player
        entities[i].id=player.point.y>>3;
      }
      break;
    }
  }
}

void entityTakeDamage(int8_t i, int8_t damage){
  if(entities[i].Type==23 && entities[i].animation!=KRYNDER_LOOKING){
    return;
  }
  entities[i].life-=damage;
  entities[i].FLASH=true;
  if(entities[i].life<0){
    if(entities[i].Type>=20){
      //gb.sound.play("sfx_deathscream_alien6.wav");
    }
    entities[i].Exists=false;
    if(entities[i].Type==24){//koomer king
      //create the key
      createEntity(7,entities[i].point.x,entities[i].point.y-8,0);
      createEntity(27,entities[i].point.x,entities[i].point.y,0);//death animation
      bitWrite(UNIQUES,6,0);
      player.KEY=true;
    }else if(entities[i].Type==25){//must kill all 4 karame heads
      //game over player wins should game win screen
      createEntity(27,entities[i].point.x,entities[i].point.y,0);//death animation
      karame_heads--;
      if(karame_heads==0){
        bitWrite(UNIQUES,7,0);
        gb.sound.tone(100,100);
        delay(100);
        gb.sound.tone(400,100);
        delay(100);
        gb.sound.tone(800,500);
        delay(300);
        //sound.tones(SND_COMPLETE_MISSION);
        
        gameState=STATE_MISSION_COMPLETE;
      }
    }else if(entities[i].Type>=20){
      //33% chance to create an energy orb on kill
      if(random(3)==0){
        createEntity(3,entities[i].point.x,entities[i].point.y,0);
      }
      createEntity(27,entities[i].point.x,entities[i].point.y,0);//death animation
    }
  }else{    
    gb.sound.tone(200,50);   
    //gb.sound.play("sfx_damage_hit2.wav");
    //gb.sound.playCancel();
  }
}

void entityGravity(int8_t i){
  if(everyXFrames(2)){
    int8_t VSPEED = entities[i].yspeed;
    if(VSPEED>0){//falling
      do{
        //verify no tile below me
        if(Entity_Place_Free(i, entities[i].point.x, entities[i].point.y+VSPEED)){
          entities[i].point.y+=VSPEED;
          entities[i].yspeed+=GRAVITY;
          if(entities[i].yspeed>8){entities[i].yspeed=8;}
            VSPEED=0;
          }else{
            if(VSPEED>1){
             VSPEED--;
            }else{
             entities[i].yspeed=0;
             VSPEED=0;
            }
          }
      }while(VSPEED>0);
    }else{
      do{
        //verify no tile above me
        if(Entity_Place_Free(i, entities[i].point.x, entities[i].point.y+VSPEED)){
          entities[i].point.y+=VSPEED;
          entities[i].yspeed+=GRAVITY;
          VSPEED=0;
        }else{
          if(VSPEED<-1){
            VSPEED++;
          }else{//time to start falling
            entities[i].yspeed=0;
            VSPEED=0;
          }
        }
      }while(VSPEED<0);
    }
  }
}

bool Entity_Place_Free(int8_t i, int16_t TempX, int16_t TempY){
  //set bound box
  Rect rect;
  if(entities[i].Type<20){
      rect = {.x=TempX, .y=TempY, .width=8, .height=8};
  }else if(entities[i].Type==20){//koomer
      rect = {.x=TempX+1, .y=TempY+1, .width=6, .height=7};
  }else if(entities[i].Type==21){//herab
      rect = {.x=TempX, .y=TempY+2, .width=8, .height=6};
  }else if(entities[i].Type==22){//grenjen
      rect = {.x=TempX+1, .y=TempY+1, .width=7, .height=7};
  }else if(entities[i].Type==23){//krynder
      rect = {.x=TempX+1, .y=TempY+2, .width=7, .height=6};      
  }else if(entities[i].Type==24){//koomer king
      rect = {.x=TempX+1, .y=TempY+1, 14, 7};
  }else if(entities[i].Type==25){//karame
      rect = {.x=TempX, .y=TempY+1, 16, 6};
  }else if(entities[i].Type==26){//karame energy blast
      rect = {.x=TempX+1, .y=TempY+1, 6, 6};
  }
  return isPlaceFree(rect,TempX,TempY);
}



Rect getEntityRect(byte i){
  if(entities[i].Type<20){
      return {.x=entities[i].point.x, .y=entities[i].point.y, .width=8, .height=8};
  }else if(entities[i].Type==20){//koomer
      return {.x=entities[i].point.x+1, .y=entities[i].point.y+1, .width=6, .height=7};
  }else if(entities[i].Type== 21){//herab
      return {.x=entities[i].point.x, .y=entities[i].point.y+2, .width=8, .height=6};
  }else if(entities[i].Type== 22){//grenjen
      return {.x=entities[i].point.x+1, .y=entities[i].point.y+1, .width=7, .height=7};
  }else if(entities[i].Type== 23){//krynder
      return {.x=entities[i].point.x+1, .y=entities[i].point.y+2, .width=7, .height=6};         
  }else if(entities[i].Type==24){//koomer king
      return {.x=entities[i].point.x+1, .y=entities[i].point.y+1, 14, 7};
  }else if(entities[i].Type==25){//karame
      return {.x=entities[i].point.x, .y=entities[i].point.y+1, 16, 6};
  }else if(entities[i].Type==26){//karame energy blast
      return {.x=entities[i].point.x+1, .y=entities[i].point.y+1, 6, 6};
  }
}
bool everyXFrames(uint8_t frames)
{
  return frameCount % frames == 0;
}

void tickEntities(){
  for (byte i = 0; i < TotalEntities; i++){
    if (entities[i].Exists == true){
      if(entities[i].Type==2){//door        
        if(entities[i].FLASH){
          Rect rect = {.x=(player.point.x>>3), .y=(player.point.y>>3), .width=8, .height=8};
          Rect entityRect = getEntityRect(i);
          //Serial.println((String)rect.x + "-\n");
          //Serial.println((String)rect.y + "-\n");
          //Serial.println((String)entityRect.x + "-\n");
          //Serial.println((String)entityRect.y + "-\n");
          if(!collide(entityRect,rect)){
            //Serial.print("closing the door\n");
            entities[i].FLASH=false;
          }
        }
      }else if(entities[i].Type>2 && entities[i].Type<20){//only doors and exits ignore gravity      
        entityGravity(i);  
      }else if(entities[i].Type==20){//koomer
        if(entities[i].animation==KOOMER_WAITING){              
          if(everyXFrames(7)){
            entities[i].frame++;
            if(entities[i].frame>1){entities[i].frame=0;}
          }
          //if player is close enough drop on him
          if(entities[i].point.y<player.point.y>>3 && entities[i].point.x<((player.point.x>>3)+8) && entities[i].point.x>((player.point.x>>3)-8)){//see if player is close enough to drop on
            entities[i].animation=KOOMER_DROPPING;
          }
        }else if(entities[i].animation==KOOMER_DROPPING){
          entities[i].frame=2;
          entityGravity(i);
          if(!Entity_Place_Free(i,entities[i].point.x,entities[i].point.y+1)){//else if solid Tile below
            entities[i].animation=KOOMER_MOVING;
            entities[i].Direct=DIR_RIGHT;
          }
        }else if(entities[i].animation==KOOMER_MOVING){
          entityGravity(i);
          if(everyXFrames(7)){
            entities[i].frame++;
            if(entities[i].frame>4){entities[i].frame=3;}
          }
          if(everyXFrames(2)){
            if(entities[i].point.x<player.point.x>>3){              
              entities[i].Direct=DIR_RIGHT;
              if(Entity_Place_Free(i,entities[i].point.x+1,entities[i].point.y)){
                entities[i].point.x+=2;
              }
            }//move toward player
            if(entities[i].point.x>player.point.x>>3){
              entities[i].Direct=DIR_LEFT;
              if(Entity_Place_Free(i,entities[i].point.x-1,entities[i].point.y)){
                entities[i].point.x-=2;
              }
            }
          }
        }     
      }else if(entities[i].Type==21){//herab
        if( Entity_Place_Free(i,entities[i].point.x+entities[i].Direct,entities[i].point.y) && entities[i].point.x+entities[i].Direct<WorldWidth(player.map_id)-8 && entities[i].point.x+entities[i].Direct>0 ){
          entities[i].point.x+=entities[i].Direct*2;
        }else{
          if(entities[i].Direct==DIR_LEFT){
            entities[i].Direct=DIR_RIGHT;
            entities[i].frame=0;
          }else{
            entities[i].Direct=DIR_LEFT;
            entities[i].frame=1;
          }
        }
      }else if(entities[i].Type==22){//grejen
        entityGravity(i);
        if(entities[i].animation==GREJEN_ON_GROUND){//on ground run animation
          if(everyXFrames(5)){
            entities[i].frame++;
            if(entities[i].frame>3){
              entities[i].frame=0;
              entities[i].animation=GREJEN_IN_AIR;
              if(entities[i].CHARGE){
                entities[i].yspeed=-18;
              }else{
                entities[i].yspeed=-16;
              }
              entities[i].CHARGE=!entities[i].CHARGE;
              //determine direction we are jumping
              if((player.point.x>>3)<entities[i].point.x){//left
                entities[i].Direct=DIR_LEFT;
              }else{
                entities[i].Direct=DIR_RIGHT;
              }
            }
          }
        }else if(entities[i].animation==GREJEN_IN_AIR){//jumping toward player
          //complete jump arc animation until we hit ground, if its a wall we slide down the wall
          //when back on ground start cycle over
          if(!Entity_Place_Free(i, entities[i].point.x, entities[i].point.y+1) && entities[i].yspeed==0){
            entities[i].animation=GREJEN_ON_GROUND;
          }
          //move in Direct chosen
          if(Entity_Place_Free(i, entities[i].point.x+entities[i].Direct, entities[i].point.y)){                
             entities[i].point.x+=entities[i].Direct*2;
          }
        }
      }else if(entities[i].Type==23){//krynder
        entityGravity(i);
        if(entities[i].animation==KRYNDER_LOOKING){
          //looks around for 2 secs then chooses a direction and rolls 
          if(everyXFrames(15)){
            entities[i].frame+=4;
            if(entities[i].frame>4){entities[i].frame=0;}
          }
          if(everyXFrames(60)){
            if((player.point.x>>3)<entities[i].point.x){//left
              entities[i].Direct=DIR_LEFT;
              entities[i].animation=KRYNDER_ROLL_LEFT;
            }else{
              entities[i].Direct=DIR_RIGHT;
              entities[i].animation=KRYNDER_ROLL_RIGHT;
            }
          }
        }else if(entities[i].animation==KRYNDER_ROLL_LEFT || entities[i].animation==KRYNDER_ROLL_RIGHT){
          //rolls until he hits a wall then stops and looks around again
          if(everyXFrames(2)){
            if(entities[i].animation==KRYNDER_ROLL_LEFT){
              entities[i].frame+=1;
              if(entities[i].frame>3){entities[i].frame=1;}
            }else{
              entities[i].frame+=1;
              if(entities[i].frame>7){entities[i].frame=5;}
            }
          }
          if( Entity_Place_Free(i, entities[i].point.x+entities[i].Direct, entities[i].point.y) && entities[i].point.x+entities[i].Direct<WorldWidth(player.map_id)-8 && entities[i].point.x+entities[i].Direct>0 ){                
            entities[i].point.x+=entities[i].Direct*2;
          }else{
            entities[i].animation=KRYNDER_LOOKING;
          }
        }    
      }else if(entities[i].Type==24){//koomer king
        if(everyXFrames(2)){
          entities[i].frame+=1;
          if(entities[i].frame>3){entities[i].frame=0;}
        }
       if(entities[i].animation==KOOMER_KING_MOVING){
          entityGravity(i);
          if(everyXFrames(1)){
            if(entities[i].point.x<player.point.x>>3){              
              if(Entity_Place_Free(i,entities[i].point.x+1,entities[i].point.y)){
                entities[i].point.x+=1;
              }
            }//move toward player
            if(entities[i].point.x>player.point.x>>3){
              if(Entity_Place_Free(i,entities[i].point.x-1,entities[i].point.y)){
                entities[i].point.x-=1;
              }
            }
          }
          if(entities[i].life<25){
            if(everyXFrames(30)){
              if(entities[i].point.x<player.point.x>>3){              
                entities[i].animation=KOOMER_KING_HOPPING;
                entities[i].yspeed=-18;
                entities[i].Direct=DIR_RIGHT;
              }//move toward player
              if(entities[i].point.x>player.point.x>>3){      
                entities[i].animation=KOOMER_KING_HOPPING;
                entities[i].yspeed=-18;
                entities[i].Direct=DIR_LEFT;
              }
            }
          }
        }else if(entities[i].animation==KOOMER_KING_HOPPING){
          entityGravity(i);
          if(Entity_Place_Free(i,entities[i].point.x+(entities[i].Direct*2),entities[i].point.y)){
            entities[i].point.x+=(entities[i].Direct*4);
          }
          if(!Entity_Place_Free(i,entities[i].point.x,entities[i].point.y+1)){
            entities[i].animation=KOOMER_KING_MOVING;
          }
        }     
      }else if(entities[i].Type==25){//karame
        //every second all 4 karame heads shoots a energy blast at the player
        if(everyXFrames(30)){
          if(entities[i].Direct>0){
            entities[i].frame=0;
            createEntity(26,entities[i].point.x+8,entities[i].point.y,entities[i].Direct);
          }else{
            entities[i].frame=2;
            createEntity(26,entities[i].point.x,entities[i].point.y,entities[i].Direct);
          }
        }else{
          if(entities[i].Direct>0){
            entities[i].frame=1;
          }else{
            entities[i].frame=3; 
          }
        }
      }else if(entities[i].Type==26){//karame energy blast
        //the energy blast moves along its path
        entities[i].point.x+=(entities[i].Direct*3);
        if(entities[i].point.y>entities[i].id){
          entities[i].point.y-=2;
        }else if(entities[i].point.y<entities[i].id){
          entities[i].point.y+=2;
        }
      }else if(entities[i].Type==27){//death animation
        if(everyXFrames(7)){
          entities[i].frame++;
          if(entities[i].frame>1){
            entities[i].Exists=false;
          }
        }
      }
      
      //entity dies if it leaves the world
      if(entities[i].point.x>WorldWidth(player.map_id)+8){//right
        entities[i].Exists=false;
      }else if(entities[i].point.x<-8){//left
        entities[i].Exists=false;
      }
    }
  }
};

void drawEntities(){
  for (int8_t i = 0; i < TotalEntities; i++){
    if (entities[i].Exists == true){
      if(entities[i].point.x-WinX>-8 & entities[i].point.x-WinX<w & entities[i].point.y-WinY>-8 & entities[i].point.y-WinY<h & !entities[i].FLASH){
        if(entities[i].Type==0){
          exits_plus_mask.setFrame(0);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, exits_plus_mask);
        }else if(entities[i].Type==1){
          exits_plus_mask.setFrame(1);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, exits_plus_mask);
        }else if(entities[i].Type==2){//door
          doors_plus_mask.setFrame(entities[i].frame);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, doors_plus_mask);
        }else if(entities[i].Type==3){//energy orb
          items_plus_mask.setFrame(0);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, items_plus_mask);
        }else if(entities[i].Type==4){//destructable wall
          items_plus_mask.setFrame(1);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, items_plus_mask);
        }else if(entities[i].Type==5){//energy tank
          items_plus_mask.setFrame(2);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, items_plus_mask);   
        }else if(entities[i].Type==6){//energy tank
          items_plus_mask.setFrame(2);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, items_plus_mask);  
        }else if(entities[i].Type==7){//key
          items_plus_mask.setFrame(3);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, items_plus_mask);         
        }else if(entities[i].Type==8){//energy blast
          items_plus_mask.setFrame(4);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, items_plus_mask);   
        }else if(entities[i].Type==9){//plasma blast
          items_plus_mask.setFrame(5);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, items_plus_mask);   
        }else if(entities[i].Type==10){//power suit
          items_plus_mask.setFrame(6);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, items_plus_mask);   
        }else if(entities[i].Type==20){
          koomer_plus_mask.setFrame(entities[i].frame);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, koomer_plus_mask);   
        }else if(entities[i].Type==21){
          herab_plus_mask.setFrame(entities[i].frame);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, herab_plus_mask);  
        }else if(entities[i].Type==22){
          grejen_plus_mask.setFrame(entities[i].frame);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, grejen_plus_mask);  
        }else if(entities[i].Type==23){
          krynder_plus_mask.setFrame(entities[i].frame);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, krynder_plus_mask); 
        }else if(entities[i].Type==24){ 
          koomerking_plus_mask.setFrame(entities[i].frame);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, koomerking_plus_mask); 
        }else if(entities[i].Type==25){//karame
          karame_plus_mask.setFrame(entities[i].frame);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, karame_plus_mask); 
        }else if(entities[i].Type==26){//karame blast ball
          blast_plus_mask.setFrame(0);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, blast_plus_mask); 
        }else if(entities[i].Type==27){//death animation
          death_plus_mask.setFrame(entities[i].frame);
          gb.display.drawImage(entities[i].point.x-WinX, entities[i].point.y-WinY, death_plus_mask); 
        }
      }else if(entities[i].FLASH==true && entities[i].Type>2){
        entities[i].FLASH=false;
      }
    }
  }
};








/////////////////////////////////////////////////////////////////////////////////
//MAP ENGINE
////////////////////////////////////////////////////////////////////////////////
int16_t WorldWidth(int8_t map_id){
  return 8*(pgm_read_byte(&MapData[mapDataStart+0]));
}

int16_t WorldHeight(int8_t map_id){
  return 8*(pgm_read_byte(&MapData[mapDataStart+1]));
}

void UpdateCamera(int16_t x, int16_t y, int8_t map_id){
 int16_t WinTargetX= x-36;
 int16_t WinTargetY= y-32; 
    
 WinX+=getCamSmoothMove(WinTargetX-WinX);
 WinY+=getCamSmoothMove(WinTargetY-WinY);   
    
 if(WinX<0){WinX=0;}
 if(WinX>(WorldWidth(map_id)-w)){WinX=(WorldWidth(map_id)-w);}
 if(WinY<0){WinY=0;}
 if(WinY>(WorldHeight(map_id)-h)){WinY=(WorldHeight(map_id)-h);}
}
  
int16_t getCamSmoothMove(int16_t offset) {
 int16_t off = abs(offset);
 if (off >= 128) off = offset < 0 ? -64:64 ;
 else if (off >= 4) off = round(offset / 2);
 else if (off > 0) off = offset < 0 ? -1:1;
 return off;
}


void DrawMap(int16_t x, int16_t y, int8_t map_id){ 
 UpdateCamera(x, y, map_id); 
 int16_t StartX=floor((WinX-8)/8);
 int16_t StartY=floor((WinY-8)/8);
 if(StartX<0){StartX=0;}
 if(StartY<0){StartY=0;}
 int16_t EndX=StartX+ScreenWidth;
 if(EndX>pgm_read_byte(&MapData[mapDataStart+0])){EndX=pgm_read_byte(&MapData[mapDataStart+0]);}
 int16_t EndY=StartY+ScreenHeight;
 if(EndY>pgm_read_byte(&MapData[mapDataStart+1])){EndY=pgm_read_byte(&MapData[mapDataStart+1]);}
 //lastFrameTime = millis();//time current frame starts
 for(int16_t TempX=StartX;TempX<EndX;TempX++){
  for(int16_t TempY=StartY;TempY<EndY;TempY++){
    int16_t NewTempX=-WinX+(TempX*8);
    int16_t NewTempY=-WinY+(TempY*8);
    //if compression is used then we need to do the bit shifting
    int8_t tile = getTile(TempX,TempY, map_id);
    tile = getMultiTileId(tile,TempX,TempY, map_id);
    if(tile>15){
      tiles_plus_mask.setFrame(tile);
      gb.display.drawImage(NewTempX, NewTempY, tiles_plus_mask);
    }
  }
 }
}

int8_t getMultiTileId(int8_t tile, int8_t TempX, int8_t TempY, int8_t map_id){
  //determine which tile to use based on tile start + neighboring tiles
  // get the 4 neighboring tiles
  //determine resulting tile
  int8_t offset = 0;

  if(tile==0 or tile==2){//must match
    if(TempY-1<0){
      offset+=1;
    }else if(getTile(TempX,TempY-1, map_id)==tile){//up tile
      offset+=1;
    }
    if(TempX+1>=pgm_read_byte(&MapData[mapDataStart+0])){
      offset+=2;
    }else if(getTile(TempX+1,TempY, map_id)==tile){//right tile
      offset+=2;
    }
    if(TempY+1>=pgm_read_byte(&MapData[mapDataStart+1])){
      offset+=4;
    }else if(getTile(TempX,TempY+1, map_id)==tile){//down tile
      offset+=4;
    }
    if(TempX-1<0){
      offset+=8;
    }else if(getTile(TempX-1,TempY, map_id)==tile){//left tile
      offset+=8;
    }
  }else{//must not be 0
    if(TempY-1<0){
      offset+=1;
    }else if(getTile(TempX,TempY-1, map_id)>0){//up tile
      offset+=1;
    }
    if(TempX+1>=pgm_read_byte(&MapData[mapDataStart+0])){
      offset+=2;
    }else if(getTile(TempX+1,TempY, map_id)>0){//right tile
      offset+=2;
    }
    if(TempY+1>=pgm_read_byte(&MapData[mapDataStart+1])){
      offset+=4;
    }else if(getTile(TempX,TempY+1, map_id)>0){//down tile
      offset+=4;
    }
    if(TempX-1<0){
      offset+=8;
    }else if(getTile(TempX-1,TempY, map_id)>0){//left tile
      offset+=8;
    }
  }  

  return tile*16+offset;
}

int8_t getTile(uint8_t TempX, uint8_t TempY, uint8_t map_id){
  //if(pgm_read_byte(&MapData[i+3])==4){//4 tiles per byte
     if(TempX%4==0){
       return (pgm_read_byte(&MapData[mapDataStart+TempY*(pgm_read_byte(&MapData[mapDataStart+0])/4)+TempX/4+6]) >> 6 & 0b11);
     }else if(TempX%4==1){
       return (pgm_read_byte(&MapData[mapDataStart+TempY*(pgm_read_byte(&MapData[mapDataStart+0])/4)+TempX/4+6]) >> 4 & 0b11);
     } else if(TempX%4==2){
       return (pgm_read_byte(&MapData[mapDataStart+TempY*(pgm_read_byte(&MapData[mapDataStart+0])/4)+TempX/4+6]) >> 2 & 0b11);
     }else if(TempX%4==3){
       return (pgm_read_byte(&MapData[mapDataStart+TempY*(pgm_read_byte(&MapData[mapDataStart+0])/4)+TempX/4+6]) & 0b11);
     }
  //}
}

int8_t TileCollision(Rect rect, int8_t RX, int8_t RY, int8_t map_id){
 if(RY>=0 && RY<pgm_read_byte(&MapData[mapDataStart+1]) && RX>=0 && RX<pgm_read_byte(&MapData[mapDataStart+0])){//on the map
  Rect tileRect = {.x = RX*8, .y = RY*8, .width =8, .height = 8};  
  if(collide(rect,tileRect)){   
    return getTile(RX, RY, map_id);
  }
 }
 return 0;
}
